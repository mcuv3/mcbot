// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.17.3
// source: privateService.proto

package service

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	wrapperspb "google.golang.org/protobuf/types/known/wrapperspb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Side int32

const (
	Side_buy  Side = 0
	Side_sell Side = 1
)

// Enum value maps for Side.
var (
	Side_name = map[int32]string{
		0: "buy",
		1: "sell",
	}
	Side_value = map[string]int32{
		"buy":  0,
		"sell": 1,
	}
)

func (x Side) Enum() *Side {
	p := new(Side)
	*p = x
	return p
}

func (x Side) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Side) Descriptor() protoreflect.EnumDescriptor {
	return file_privateService_proto_enumTypes[0].Descriptor()
}

func (Side) Type() protoreflect.EnumType {
	return &file_privateService_proto_enumTypes[0]
}

func (x Side) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Side.Descriptor instead.
func (Side) EnumDescriptor() ([]byte, []int) {
	return file_privateService_proto_rawDescGZIP(), []int{0}
}

type CancelMode int32

const (
	CancelMode_notEmptySide CancelMode = 0
	CancelMode_bothSides    CancelMode = 1
	CancelMode_sellSide     CancelMode = 2
	CancelMode_buySide      CancelMode = 3
)

// Enum value maps for CancelMode.
var (
	CancelMode_name = map[int32]string{
		0: "notEmptySide",
		1: "bothSides",
		2: "sellSide",
		3: "buySide",
	}
	CancelMode_value = map[string]int32{
		"notEmptySide": 0,
		"bothSides":    1,
		"sellSide":     2,
		"buySide":      3,
	}
)

func (x CancelMode) Enum() *CancelMode {
	p := new(CancelMode)
	*p = x
	return p
}

func (x CancelMode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CancelMode) Descriptor() protoreflect.EnumDescriptor {
	return file_privateService_proto_enumTypes[1].Descriptor()
}

func (CancelMode) Type() protoreflect.EnumType {
	return &file_privateService_proto_enumTypes[1]
}

func (x CancelMode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CancelMode.Descriptor instead.
func (CancelMode) EnumDescriptor() ([]byte, []int) {
	return file_privateService_proto_rawDescGZIP(), []int{1}
}

type BulkErrorCode int32

const (
	BulkErrorCode_invalidInputField BulkErrorCode = 0
	BulkErrorCode_rejected          BulkErrorCode = 1
	BulkErrorCode_runtime           BulkErrorCode = 500
)

// Enum value maps for BulkErrorCode.
var (
	BulkErrorCode_name = map[int32]string{
		0:   "invalidInputField",
		1:   "rejected",
		500: "runtime",
	}
	BulkErrorCode_value = map[string]int32{
		"invalidInputField": 0,
		"rejected":          1,
		"runtime":           500,
	}
)

func (x BulkErrorCode) Enum() *BulkErrorCode {
	p := new(BulkErrorCode)
	*p = x
	return p
}

func (x BulkErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BulkErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_privateService_proto_enumTypes[2].Descriptor()
}

func (BulkErrorCode) Type() protoreflect.EnumType {
	return &file_privateService_proto_enumTypes[2]
}

func (x BulkErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use BulkErrorCode.Descriptor instead.
func (BulkErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_privateService_proto_rawDescGZIP(), []int{2}
}

type LimitOrderRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AssetPairId string `protobuf:"bytes,1,opt,name=assetPairId,proto3" json:"assetPairId,omitempty"`
	Side        Side   `protobuf:"varint,2,opt,name=side,proto3,enum=hft.Side" json:"side,omitempty"`
	Volume      string `protobuf:"bytes,3,opt,name=volume,proto3" json:"volume,omitempty"`
	Price       string `protobuf:"bytes,4,opt,name=price,proto3" json:"price,omitempty"`
}

func (x *LimitOrderRequest) Reset() {
	*x = LimitOrderRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_privateService_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LimitOrderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LimitOrderRequest) ProtoMessage() {}

func (x *LimitOrderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_privateService_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LimitOrderRequest.ProtoReflect.Descriptor instead.
func (*LimitOrderRequest) Descriptor() ([]byte, []int) {
	return file_privateService_proto_rawDescGZIP(), []int{0}
}

func (x *LimitOrderRequest) GetAssetPairId() string {
	if x != nil {
		return x.AssetPairId
	}
	return ""
}

func (x *LimitOrderRequest) GetSide() Side {
	if x != nil {
		return x.Side
	}
	return Side_buy
}

func (x *LimitOrderRequest) GetVolume() string {
	if x != nil {
		return x.Volume
	}
	return ""
}

func (x *LimitOrderRequest) GetPrice() string {
	if x != nil {
		return x.Price
	}
	return ""
}

type BulkLimitOrderRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AssetPairId          string `protobuf:"bytes,1,opt,name=assetPairId,proto3" json:"assetPairId,omitempty"`
	CancelPreviousOrders bool   `protobuf:"varint,2,opt,name=cancelPreviousOrders,proto3" json:"cancelPreviousOrders,omitempty"`
	// Types that are assignable to OptionalCancelMode:
	//	*BulkLimitOrderRequest_CancelMode
	OptionalCancelMode isBulkLimitOrderRequest_OptionalCancelMode `protobuf_oneof:"optional_cancelMode"`
	Orders             []*BulkOrder                               `protobuf:"bytes,4,rep,name=orders,proto3" json:"orders,omitempty"`
}

func (x *BulkLimitOrderRequest) Reset() {
	*x = BulkLimitOrderRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_privateService_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BulkLimitOrderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BulkLimitOrderRequest) ProtoMessage() {}

func (x *BulkLimitOrderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_privateService_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BulkLimitOrderRequest.ProtoReflect.Descriptor instead.
func (*BulkLimitOrderRequest) Descriptor() ([]byte, []int) {
	return file_privateService_proto_rawDescGZIP(), []int{1}
}

func (x *BulkLimitOrderRequest) GetAssetPairId() string {
	if x != nil {
		return x.AssetPairId
	}
	return ""
}

func (x *BulkLimitOrderRequest) GetCancelPreviousOrders() bool {
	if x != nil {
		return x.CancelPreviousOrders
	}
	return false
}

func (m *BulkLimitOrderRequest) GetOptionalCancelMode() isBulkLimitOrderRequest_OptionalCancelMode {
	if m != nil {
		return m.OptionalCancelMode
	}
	return nil
}

func (x *BulkLimitOrderRequest) GetCancelMode() CancelMode {
	if x, ok := x.GetOptionalCancelMode().(*BulkLimitOrderRequest_CancelMode); ok {
		return x.CancelMode
	}
	return CancelMode_notEmptySide
}

func (x *BulkLimitOrderRequest) GetOrders() []*BulkOrder {
	if x != nil {
		return x.Orders
	}
	return nil
}

type isBulkLimitOrderRequest_OptionalCancelMode interface {
	isBulkLimitOrderRequest_OptionalCancelMode()
}

type BulkLimitOrderRequest_CancelMode struct {
	CancelMode CancelMode `protobuf:"varint,3,opt,name=cancelMode,proto3,enum=hft.CancelMode,oneof"`
}

func (*BulkLimitOrderRequest_CancelMode) isBulkLimitOrderRequest_OptionalCancelMode() {}

type BulkOrder struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Side   Side   `protobuf:"varint,1,opt,name=side,proto3,enum=hft.Side" json:"side,omitempty"`
	Volume string `protobuf:"bytes,2,opt,name=volume,proto3" json:"volume,omitempty"`
	Price  string `protobuf:"bytes,3,opt,name=price,proto3" json:"price,omitempty"`
	OldId  string `protobuf:"bytes,4,opt,name=oldId,proto3" json:"oldId,omitempty"`
}

func (x *BulkOrder) Reset() {
	*x = BulkOrder{}
	if protoimpl.UnsafeEnabled {
		mi := &file_privateService_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BulkOrder) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BulkOrder) ProtoMessage() {}

func (x *BulkOrder) ProtoReflect() protoreflect.Message {
	mi := &file_privateService_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BulkOrder.ProtoReflect.Descriptor instead.
func (*BulkOrder) Descriptor() ([]byte, []int) {
	return file_privateService_proto_rawDescGZIP(), []int{2}
}

func (x *BulkOrder) GetSide() Side {
	if x != nil {
		return x.Side
	}
	return Side_buy
}

func (x *BulkOrder) GetVolume() string {
	if x != nil {
		return x.Volume
	}
	return ""
}

func (x *BulkOrder) GetPrice() string {
	if x != nil {
		return x.Price
	}
	return ""
}

func (x *BulkOrder) GetOldId() string {
	if x != nil {
		return x.OldId
	}
	return ""
}

type MarketOrderRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AssetPairId string `protobuf:"bytes,1,opt,name=assetPairId,proto3" json:"assetPairId,omitempty"`
	Side        Side   `protobuf:"varint,2,opt,name=side,proto3,enum=hft.Side" json:"side,omitempty"`
	Volume      string `protobuf:"bytes,3,opt,name=volume,proto3" json:"volume,omitempty"`
}

func (x *MarketOrderRequest) Reset() {
	*x = MarketOrderRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_privateService_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MarketOrderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MarketOrderRequest) ProtoMessage() {}

func (x *MarketOrderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_privateService_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MarketOrderRequest.ProtoReflect.Descriptor instead.
func (*MarketOrderRequest) Descriptor() ([]byte, []int) {
	return file_privateService_proto_rawDescGZIP(), []int{3}
}

func (x *MarketOrderRequest) GetAssetPairId() string {
	if x != nil {
		return x.AssetPairId
	}
	return ""
}

func (x *MarketOrderRequest) GetSide() Side {
	if x != nil {
		return x.Side
	}
	return Side_buy
}

func (x *MarketOrderRequest) GetVolume() string {
	if x != nil {
		return x.Volume
	}
	return ""
}

type OrderRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrderId string `protobuf:"bytes,1,opt,name=orderId,proto3" json:"orderId,omitempty"`
}

func (x *OrderRequest) Reset() {
	*x = OrderRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_privateService_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderRequest) ProtoMessage() {}

func (x *OrderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_privateService_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderRequest.ProtoReflect.Descriptor instead.
func (*OrderRequest) Descriptor() ([]byte, []int) {
	return file_privateService_proto_rawDescGZIP(), []int{4}
}

func (x *OrderRequest) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

type OrdersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AssetPairId string `protobuf:"bytes,1,opt,name=assetPairId,proto3" json:"assetPairId,omitempty"`
	Offset      int32  `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
	Take        int32  `protobuf:"varint,3,opt,name=take,proto3" json:"take,omitempty"`
}

func (x *OrdersRequest) Reset() {
	*x = OrdersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_privateService_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrdersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrdersRequest) ProtoMessage() {}

func (x *OrdersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_privateService_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrdersRequest.ProtoReflect.Descriptor instead.
func (*OrdersRequest) Descriptor() ([]byte, []int) {
	return file_privateService_proto_rawDescGZIP(), []int{5}
}

func (x *OrdersRequest) GetAssetPairId() string {
	if x != nil {
		return x.AssetPairId
	}
	return ""
}

func (x *OrdersRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *OrdersRequest) GetTake() int32 {
	if x != nil {
		return x.Take
	}
	return 0
}

type CancelOrdersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AssetPairId string `protobuf:"bytes,1,opt,name=assetPairId,proto3" json:"assetPairId,omitempty"`
	Side        Side   `protobuf:"varint,2,opt,name=side,proto3,enum=hft.Side" json:"side,omitempty"`
}

func (x *CancelOrdersRequest) Reset() {
	*x = CancelOrdersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_privateService_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CancelOrdersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelOrdersRequest) ProtoMessage() {}

func (x *CancelOrdersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_privateService_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancelOrdersRequest.ProtoReflect.Descriptor instead.
func (*CancelOrdersRequest) Descriptor() ([]byte, []int) {
	return file_privateService_proto_rawDescGZIP(), []int{6}
}

func (x *CancelOrdersRequest) GetAssetPairId() string {
	if x != nil {
		return x.AssetPairId
	}
	return ""
}

func (x *CancelOrdersRequest) GetSide() Side {
	if x != nil {
		return x.Side
	}
	return Side_buy
}

type CancelOrderRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrderId string `protobuf:"bytes,1,opt,name=orderId,proto3" json:"orderId,omitempty"`
}

func (x *CancelOrderRequest) Reset() {
	*x = CancelOrderRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_privateService_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CancelOrderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelOrderRequest) ProtoMessage() {}

func (x *CancelOrderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_privateService_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancelOrderRequest.ProtoReflect.Descriptor instead.
func (*CancelOrderRequest) Descriptor() ([]byte, []int) {
	return file_privateService_proto_rawDescGZIP(), []int{7}
}

func (x *CancelOrderRequest) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

type TradesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AssetPairId string `protobuf:"bytes,1,opt,name=assetPairId,proto3" json:"assetPairId,omitempty"`
	// Types that are assignable to OptionalSide:
	//	*TradesRequest_Side
	OptionalSide isTradesRequest_OptionalSide `protobuf_oneof:"optional_side"`
	Offset       int32                        `protobuf:"varint,3,opt,name=offset,proto3" json:"offset,omitempty"`
	Take         int32                        `protobuf:"varint,4,opt,name=take,proto3" json:"take,omitempty"`
	// Types that are assignable to OptionalFrom:
	//	*TradesRequest_From
	OptionalFrom isTradesRequest_OptionalFrom `protobuf_oneof:"optional_from"`
	// Types that are assignable to OptionalTo:
	//	*TradesRequest_To
	OptionalTo isTradesRequest_OptionalTo `protobuf_oneof:"optional_to"`
}

func (x *TradesRequest) Reset() {
	*x = TradesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_privateService_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TradesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TradesRequest) ProtoMessage() {}

func (x *TradesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_privateService_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TradesRequest.ProtoReflect.Descriptor instead.
func (*TradesRequest) Descriptor() ([]byte, []int) {
	return file_privateService_proto_rawDescGZIP(), []int{8}
}

func (x *TradesRequest) GetAssetPairId() string {
	if x != nil {
		return x.AssetPairId
	}
	return ""
}

func (m *TradesRequest) GetOptionalSide() isTradesRequest_OptionalSide {
	if m != nil {
		return m.OptionalSide
	}
	return nil
}

func (x *TradesRequest) GetSide() Side {
	if x, ok := x.GetOptionalSide().(*TradesRequest_Side); ok {
		return x.Side
	}
	return Side_buy
}

func (x *TradesRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *TradesRequest) GetTake() int32 {
	if x != nil {
		return x.Take
	}
	return 0
}

func (m *TradesRequest) GetOptionalFrom() isTradesRequest_OptionalFrom {
	if m != nil {
		return m.OptionalFrom
	}
	return nil
}

func (x *TradesRequest) GetFrom() *timestamppb.Timestamp {
	if x, ok := x.GetOptionalFrom().(*TradesRequest_From); ok {
		return x.From
	}
	return nil
}

func (m *TradesRequest) GetOptionalTo() isTradesRequest_OptionalTo {
	if m != nil {
		return m.OptionalTo
	}
	return nil
}

func (x *TradesRequest) GetTo() *timestamppb.Timestamp {
	if x, ok := x.GetOptionalTo().(*TradesRequest_To); ok {
		return x.To
	}
	return nil
}

type isTradesRequest_OptionalSide interface {
	isTradesRequest_OptionalSide()
}

type TradesRequest_Side struct {
	Side Side `protobuf:"varint,2,opt,name=side,proto3,enum=hft.Side,oneof"`
}

func (*TradesRequest_Side) isTradesRequest_OptionalSide() {}

type isTradesRequest_OptionalFrom interface {
	isTradesRequest_OptionalFrom()
}

type TradesRequest_From struct {
	From *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=from,proto3,oneof"`
}

func (*TradesRequest_From) isTradesRequest_OptionalFrom() {}

type isTradesRequest_OptionalTo interface {
	isTradesRequest_OptionalTo()
}

type TradesRequest_To struct {
	To *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=to,proto3,oneof"`
}

func (*TradesRequest_To) isTradesRequest_OptionalTo() {}

type GetOperationsHistoryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Offset int32 `protobuf:"varint,1,opt,name=offset,proto3" json:"offset,omitempty"`
	Take   int32 `protobuf:"varint,2,opt,name=take,proto3" json:"take,omitempty"`
}

func (x *GetOperationsHistoryRequest) Reset() {
	*x = GetOperationsHistoryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_privateService_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOperationsHistoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOperationsHistoryRequest) ProtoMessage() {}

func (x *GetOperationsHistoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_privateService_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOperationsHistoryRequest.ProtoReflect.Descriptor instead.
func (*GetOperationsHistoryRequest) Descriptor() ([]byte, []int) {
	return file_privateService_proto_rawDescGZIP(), []int{9}
}

func (x *GetOperationsHistoryRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *GetOperationsHistoryRequest) GetTake() int32 {
	if x != nil {
		return x.Take
	}
	return 0
}

type OrderTradesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrderId string `protobuf:"bytes,1,opt,name=orderId,proto3" json:"orderId,omitempty"`
}

func (x *OrderTradesRequest) Reset() {
	*x = OrderTradesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_privateService_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderTradesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderTradesRequest) ProtoMessage() {}

func (x *OrderTradesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_privateService_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderTradesRequest.ProtoReflect.Descriptor instead.
func (*OrderTradesRequest) Descriptor() ([]byte, []int) {
	return file_privateService_proto_rawDescGZIP(), []int{10}
}

func (x *OrderTradesRequest) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

type BalancesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Payload []*Balance `protobuf:"bytes,1,rep,name=payload,proto3" json:"payload,omitempty"`
	Error   *Error     `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *BalancesResponse) Reset() {
	*x = BalancesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_privateService_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BalancesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BalancesResponse) ProtoMessage() {}

func (x *BalancesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_privateService_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BalancesResponse.ProtoReflect.Descriptor instead.
func (*BalancesResponse) Descriptor() ([]byte, []int) {
	return file_privateService_proto_rawDescGZIP(), []int{11}
}

func (x *BalancesResponse) GetPayload() []*Balance {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *BalancesResponse) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

type LimitOrderResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Payload *LimitOrderResponse_LimitOrderPayload `protobuf:"bytes,1,opt,name=payload,proto3" json:"payload,omitempty"`
	Error   *Error                                `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *LimitOrderResponse) Reset() {
	*x = LimitOrderResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_privateService_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LimitOrderResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LimitOrderResponse) ProtoMessage() {}

func (x *LimitOrderResponse) ProtoReflect() protoreflect.Message {
	mi := &file_privateService_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LimitOrderResponse.ProtoReflect.Descriptor instead.
func (*LimitOrderResponse) Descriptor() ([]byte, []int) {
	return file_privateService_proto_rawDescGZIP(), []int{12}
}

func (x *LimitOrderResponse) GetPayload() *LimitOrderResponse_LimitOrderPayload {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *LimitOrderResponse) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

type BulkLimitOrderResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Payload *BulkLimitOrderResponse_BulkLimitOrderPayload `protobuf:"bytes,1,opt,name=payload,proto3" json:"payload,omitempty"`
	Error   *Error                                        `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *BulkLimitOrderResponse) Reset() {
	*x = BulkLimitOrderResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_privateService_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BulkLimitOrderResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BulkLimitOrderResponse) ProtoMessage() {}

func (x *BulkLimitOrderResponse) ProtoReflect() protoreflect.Message {
	mi := &file_privateService_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BulkLimitOrderResponse.ProtoReflect.Descriptor instead.
func (*BulkLimitOrderResponse) Descriptor() ([]byte, []int) {
	return file_privateService_proto_rawDescGZIP(), []int{13}
}

func (x *BulkLimitOrderResponse) GetPayload() *BulkLimitOrderResponse_BulkLimitOrderPayload {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *BulkLimitOrderResponse) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

type BulkOrderItemStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     string    `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Error  ErrorCode `protobuf:"varint,2,opt,name=error,proto3,enum=hft.common.ErrorCode" json:"error,omitempty"`
	Volume string    `protobuf:"bytes,3,opt,name=volume,proto3" json:"volume,omitempty"`
	Price  string    `protobuf:"bytes,4,opt,name=price,proto3" json:"price,omitempty"`
}

func (x *BulkOrderItemStatus) Reset() {
	*x = BulkOrderItemStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_privateService_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BulkOrderItemStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BulkOrderItemStatus) ProtoMessage() {}

func (x *BulkOrderItemStatus) ProtoReflect() protoreflect.Message {
	mi := &file_privateService_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BulkOrderItemStatus.ProtoReflect.Descriptor instead.
func (*BulkOrderItemStatus) Descriptor() ([]byte, []int) {
	return file_privateService_proto_rawDescGZIP(), []int{14}
}

func (x *BulkOrderItemStatus) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *BulkOrderItemStatus) GetError() ErrorCode {
	if x != nil {
		return x.Error
	}
	return ErrorCode_success
}

func (x *BulkOrderItemStatus) GetVolume() string {
	if x != nil {
		return x.Volume
	}
	return ""
}

func (x *BulkOrderItemStatus) GetPrice() string {
	if x != nil {
		return x.Price
	}
	return ""
}

type MarketOrderResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Payload *MarketOrderResponse_MarketOrderPayload `protobuf:"bytes,1,opt,name=payload,proto3" json:"payload,omitempty"`
	Error   *Error                                  `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *MarketOrderResponse) Reset() {
	*x = MarketOrderResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_privateService_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MarketOrderResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MarketOrderResponse) ProtoMessage() {}

func (x *MarketOrderResponse) ProtoReflect() protoreflect.Message {
	mi := &file_privateService_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MarketOrderResponse.ProtoReflect.Descriptor instead.
func (*MarketOrderResponse) Descriptor() ([]byte, []int) {
	return file_privateService_proto_rawDescGZIP(), []int{15}
}

func (x *MarketOrderResponse) GetPayload() *MarketOrderResponse_MarketOrderPayload {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *MarketOrderResponse) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

type OrderResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Payload *Order `protobuf:"bytes,1,opt,name=payload,proto3" json:"payload,omitempty"`
	Error   *Error `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *OrderResponse) Reset() {
	*x = OrderResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_privateService_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderResponse) ProtoMessage() {}

func (x *OrderResponse) ProtoReflect() protoreflect.Message {
	mi := &file_privateService_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderResponse.ProtoReflect.Descriptor instead.
func (*OrderResponse) Descriptor() ([]byte, []int) {
	return file_privateService_proto_rawDescGZIP(), []int{16}
}

func (x *OrderResponse) GetPayload() *Order {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *OrderResponse) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

type OrdersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Payload []*Order `protobuf:"bytes,1,rep,name=payload,proto3" json:"payload,omitempty"`
	Error   *Error   `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *OrdersResponse) Reset() {
	*x = OrdersResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_privateService_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrdersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrdersResponse) ProtoMessage() {}

func (x *OrdersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_privateService_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrdersResponse.ProtoReflect.Descriptor instead.
func (*OrdersResponse) Descriptor() ([]byte, []int) {
	return file_privateService_proto_rawDescGZIP(), []int{17}
}

func (x *OrdersResponse) GetPayload() []*Order {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *OrdersResponse) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

type CancelOrderResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Payload bool   `protobuf:"varint,1,opt,name=payload,proto3" json:"payload,omitempty"`
	Error   *Error `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *CancelOrderResponse) Reset() {
	*x = CancelOrderResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_privateService_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CancelOrderResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelOrderResponse) ProtoMessage() {}

func (x *CancelOrderResponse) ProtoReflect() protoreflect.Message {
	mi := &file_privateService_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancelOrderResponse.ProtoReflect.Descriptor instead.
func (*CancelOrderResponse) Descriptor() ([]byte, []int) {
	return file_privateService_proto_rawDescGZIP(), []int{18}
}

func (x *CancelOrderResponse) GetPayload() bool {
	if x != nil {
		return x.Payload
	}
	return false
}

func (x *CancelOrderResponse) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

type TradesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Payload []*Trade `protobuf:"bytes,1,rep,name=payload,proto3" json:"payload,omitempty"`
	Error   *Error   `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *TradesResponse) Reset() {
	*x = TradesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_privateService_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TradesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TradesResponse) ProtoMessage() {}

func (x *TradesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_privateService_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TradesResponse.ProtoReflect.Descriptor instead.
func (*TradesResponse) Descriptor() ([]byte, []int) {
	return file_privateService_proto_rawDescGZIP(), []int{19}
}

func (x *TradesResponse) GetPayload() []*Trade {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *TradesResponse) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

type Balance struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AssetId   string                 `protobuf:"bytes,1,opt,name=assetId,proto3" json:"assetId,omitempty"`
	Available string                 `protobuf:"bytes,2,opt,name=available,proto3" json:"available,omitempty"`
	Reserved  string                 `protobuf:"bytes,3,opt,name=reserved,proto3" json:"reserved,omitempty"`
	Timestamp *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
}

func (x *Balance) Reset() {
	*x = Balance{}
	if protoimpl.UnsafeEnabled {
		mi := &file_privateService_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Balance) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Balance) ProtoMessage() {}

func (x *Balance) ProtoReflect() protoreflect.Message {
	mi := &file_privateService_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Balance.ProtoReflect.Descriptor instead.
func (*Balance) Descriptor() ([]byte, []int) {
	return file_privateService_proto_rawDescGZIP(), []int{20}
}

func (x *Balance) GetAssetId() string {
	if x != nil {
		return x.AssetId
	}
	return ""
}

func (x *Balance) GetAvailable() string {
	if x != nil {
		return x.Available
	}
	return ""
}

func (x *Balance) GetReserved() string {
	if x != nil {
		return x.Reserved
	}
	return ""
}

func (x *Balance) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

type Order struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Timestamp *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	// Types that are assignable to OptionalLastTradeTimestamp:
	//	*Order_LastTradeTimestamp
	OptionalLastTradeTimestamp isOrder_OptionalLastTradeTimestamp `protobuf_oneof:"optional_lastTradeTimestamp"`
	Status                     string                             `protobuf:"bytes,4,opt,name=status,proto3" json:"status,omitempty"`
	AssetPairId                string                             `protobuf:"bytes,5,opt,name=assetPairId,proto3" json:"assetPairId,omitempty"`
	Type                       string                             `protobuf:"bytes,6,opt,name=type,proto3" json:"type,omitempty"`
	Side                       Side                               `protobuf:"varint,7,opt,name=side,proto3,enum=hft.Side" json:"side,omitempty"`
	Price                      string                             `protobuf:"bytes,8,opt,name=price,proto3" json:"price,omitempty"`
	Volume                     string                             `protobuf:"bytes,9,opt,name=volume,proto3" json:"volume,omitempty"`
	FilledVolume               string                             `protobuf:"bytes,10,opt,name=filledVolume,proto3" json:"filledVolume,omitempty"` //> Volume - RemainingVolume;
	RemainingVolume            string                             `protobuf:"bytes,11,opt,name=remainingVolume,proto3" json:"remainingVolume,omitempty"`
	Cost                       string                             `protobuf:"bytes,12,opt,name=cost,proto3" json:"cost,omitempty"` // FilledVolume * Price;
}

func (x *Order) Reset() {
	*x = Order{}
	if protoimpl.UnsafeEnabled {
		mi := &file_privateService_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Order) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Order) ProtoMessage() {}

func (x *Order) ProtoReflect() protoreflect.Message {
	mi := &file_privateService_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Order.ProtoReflect.Descriptor instead.
func (*Order) Descriptor() ([]byte, []int) {
	return file_privateService_proto_rawDescGZIP(), []int{21}
}

func (x *Order) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Order) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (m *Order) GetOptionalLastTradeTimestamp() isOrder_OptionalLastTradeTimestamp {
	if m != nil {
		return m.OptionalLastTradeTimestamp
	}
	return nil
}

func (x *Order) GetLastTradeTimestamp() *timestamppb.Timestamp {
	if x, ok := x.GetOptionalLastTradeTimestamp().(*Order_LastTradeTimestamp); ok {
		return x.LastTradeTimestamp
	}
	return nil
}

func (x *Order) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *Order) GetAssetPairId() string {
	if x != nil {
		return x.AssetPairId
	}
	return ""
}

func (x *Order) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Order) GetSide() Side {
	if x != nil {
		return x.Side
	}
	return Side_buy
}

func (x *Order) GetPrice() string {
	if x != nil {
		return x.Price
	}
	return ""
}

func (x *Order) GetVolume() string {
	if x != nil {
		return x.Volume
	}
	return ""
}

func (x *Order) GetFilledVolume() string {
	if x != nil {
		return x.FilledVolume
	}
	return ""
}

func (x *Order) GetRemainingVolume() string {
	if x != nil {
		return x.RemainingVolume
	}
	return ""
}

func (x *Order) GetCost() string {
	if x != nil {
		return x.Cost
	}
	return ""
}

type isOrder_OptionalLastTradeTimestamp interface {
	isOrder_OptionalLastTradeTimestamp()
}

type Order_LastTradeTimestamp struct {
	LastTradeTimestamp *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=lastTradeTimestamp,proto3,oneof"`
}

func (*Order_LastTradeTimestamp) isOrder_OptionalLastTradeTimestamp() {}

type Trade struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Timestamp    *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	AssetPairId  string                 `protobuf:"bytes,3,opt,name=assetPairId,proto3" json:"assetPairId,omitempty"`
	OrderId      string                 `protobuf:"bytes,4,opt,name=orderId,proto3" json:"orderId,omitempty"`
	Role         string                 `protobuf:"bytes,5,opt,name=role,proto3" json:"role,omitempty"`
	Price        string                 `protobuf:"bytes,6,opt,name=price,proto3" json:"price,omitempty"`
	BaseVolume   string                 `protobuf:"bytes,7,opt,name=baseVolume,proto3" json:"baseVolume,omitempty"`
	QuoteVolume  string                 `protobuf:"bytes,8,opt,name=quoteVolume,proto3" json:"quoteVolume,omitempty"`
	BaseAssetId  string                 `protobuf:"bytes,9,opt,name=baseAssetId,proto3" json:"baseAssetId,omitempty"`
	QuoteAssetId string                 `protobuf:"bytes,10,opt,name=quoteAssetId,proto3" json:"quoteAssetId,omitempty"`
	Fee          *TradeFee              `protobuf:"bytes,11,opt,name=fee,proto3" json:"fee,omitempty"`
	Side         Side                   `protobuf:"varint,12,opt,name=side,proto3,enum=hft.Side" json:"side,omitempty"`
}

func (x *Trade) Reset() {
	*x = Trade{}
	if protoimpl.UnsafeEnabled {
		mi := &file_privateService_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Trade) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Trade) ProtoMessage() {}

func (x *Trade) ProtoReflect() protoreflect.Message {
	mi := &file_privateService_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Trade.ProtoReflect.Descriptor instead.
func (*Trade) Descriptor() ([]byte, []int) {
	return file_privateService_proto_rawDescGZIP(), []int{22}
}

func (x *Trade) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Trade) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *Trade) GetAssetPairId() string {
	if x != nil {
		return x.AssetPairId
	}
	return ""
}

func (x *Trade) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

func (x *Trade) GetRole() string {
	if x != nil {
		return x.Role
	}
	return ""
}

func (x *Trade) GetPrice() string {
	if x != nil {
		return x.Price
	}
	return ""
}

func (x *Trade) GetBaseVolume() string {
	if x != nil {
		return x.BaseVolume
	}
	return ""
}

func (x *Trade) GetQuoteVolume() string {
	if x != nil {
		return x.QuoteVolume
	}
	return ""
}

func (x *Trade) GetBaseAssetId() string {
	if x != nil {
		return x.BaseAssetId
	}
	return ""
}

func (x *Trade) GetQuoteAssetId() string {
	if x != nil {
		return x.QuoteAssetId
	}
	return ""
}

func (x *Trade) GetFee() *TradeFee {
	if x != nil {
		return x.Fee
	}
	return nil
}

func (x *Trade) GetSide() Side {
	if x != nil {
		return x.Side
	}
	return Side_buy
}

type TradeFee struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Size    string `protobuf:"bytes,1,opt,name=size,proto3" json:"size,omitempty"`
	AssetId string `protobuf:"bytes,2,opt,name=assetId,proto3" json:"assetId,omitempty"`
}

func (x *TradeFee) Reset() {
	*x = TradeFee{}
	if protoimpl.UnsafeEnabled {
		mi := &file_privateService_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TradeFee) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TradeFee) ProtoMessage() {}

func (x *TradeFee) ProtoReflect() protoreflect.Message {
	mi := &file_privateService_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TradeFee.ProtoReflect.Descriptor instead.
func (*TradeFee) Descriptor() ([]byte, []int) {
	return file_privateService_proto_rawDescGZIP(), []int{23}
}

func (x *TradeFee) GetSize() string {
	if x != nil {
		return x.Size
	}
	return ""
}

func (x *TradeFee) GetAssetId() string {
	if x != nil {
		return x.AssetId
	}
	return ""
}

type BalanceUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Balances []*Balance `protobuf:"bytes,1,rep,name=balances,proto3" json:"balances,omitempty"`
}

func (x *BalanceUpdate) Reset() {
	*x = BalanceUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_privateService_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BalanceUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BalanceUpdate) ProtoMessage() {}

func (x *BalanceUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_privateService_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BalanceUpdate.ProtoReflect.Descriptor instead.
func (*BalanceUpdate) Descriptor() ([]byte, []int) {
	return file_privateService_proto_rawDescGZIP(), []int{24}
}

func (x *BalanceUpdate) GetBalances() []*Balance {
	if x != nil {
		return x.Balances
	}
	return nil
}

type OrderUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Orders []*Order `protobuf:"bytes,1,rep,name=orders,proto3" json:"orders,omitempty"`
}

func (x *OrderUpdate) Reset() {
	*x = OrderUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_privateService_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderUpdate) ProtoMessage() {}

func (x *OrderUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_privateService_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderUpdate.ProtoReflect.Descriptor instead.
func (*OrderUpdate) Descriptor() ([]byte, []int) {
	return file_privateService_proto_rawDescGZIP(), []int{25}
}

func (x *OrderUpdate) GetOrders() []*Order {
	if x != nil {
		return x.Orders
	}
	return nil
}

type TradeUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Trades []*Trade `protobuf:"bytes,1,rep,name=trades,proto3" json:"trades,omitempty"`
}

func (x *TradeUpdate) Reset() {
	*x = TradeUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_privateService_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TradeUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TradeUpdate) ProtoMessage() {}

func (x *TradeUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_privateService_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TradeUpdate.ProtoReflect.Descriptor instead.
func (*TradeUpdate) Descriptor() ([]byte, []int) {
	return file_privateService_proto_rawDescGZIP(), []int{26}
}

func (x *TradeUpdate) GetTrades() []*Trade {
	if x != nil {
		return x.Trades
	}
	return nil
}

type GetOperationsHistoryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Operations []*OperationHistory `protobuf:"bytes,1,rep,name=operations,proto3" json:"operations,omitempty"`
}

func (x *GetOperationsHistoryResponse) Reset() {
	*x = GetOperationsHistoryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_privateService_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOperationsHistoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOperationsHistoryResponse) ProtoMessage() {}

func (x *GetOperationsHistoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_privateService_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOperationsHistoryResponse.ProtoReflect.Descriptor instead.
func (*GetOperationsHistoryResponse) Descriptor() ([]byte, []int) {
	return file_privateService_proto_rawDescGZIP(), []int{27}
}

func (x *GetOperationsHistoryResponse) GetOperations() []*OperationHistory {
	if x != nil {
		return x.Operations
	}
	return nil
}

type OperationHistory struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperationId    string                  `protobuf:"bytes,1,opt,name=operationId,proto3" json:"operationId,omitempty"`
	AssetId        string                  `protobuf:"bytes,2,opt,name=assetId,proto3" json:"assetId,omitempty"`
	TotalVolume    string                  `protobuf:"bytes,3,opt,name=totalVolume,proto3" json:"totalVolume,omitempty"`
	Fee            string                  `protobuf:"bytes,4,opt,name=fee,proto3" json:"fee,omitempty"`
	Type           string                  `protobuf:"bytes,5,opt,name=type,proto3" json:"type,omitempty"`
	Timestamp      *timestamppb.Timestamp  `protobuf:"bytes,6,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	BlockchainHash *wrapperspb.StringValue `protobuf:"bytes,7,opt,name=blockchainHash,proto3" json:"blockchainHash,omitempty"`
}

func (x *OperationHistory) Reset() {
	*x = OperationHistory{}
	if protoimpl.UnsafeEnabled {
		mi := &file_privateService_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OperationHistory) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OperationHistory) ProtoMessage() {}

func (x *OperationHistory) ProtoReflect() protoreflect.Message {
	mi := &file_privateService_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OperationHistory.ProtoReflect.Descriptor instead.
func (*OperationHistory) Descriptor() ([]byte, []int) {
	return file_privateService_proto_rawDescGZIP(), []int{28}
}

func (x *OperationHistory) GetOperationId() string {
	if x != nil {
		return x.OperationId
	}
	return ""
}

func (x *OperationHistory) GetAssetId() string {
	if x != nil {
		return x.AssetId
	}
	return ""
}

func (x *OperationHistory) GetTotalVolume() string {
	if x != nil {
		return x.TotalVolume
	}
	return ""
}

func (x *OperationHistory) GetFee() string {
	if x != nil {
		return x.Fee
	}
	return ""
}

func (x *OperationHistory) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *OperationHistory) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *OperationHistory) GetBlockchainHash() *wrapperspb.StringValue {
	if x != nil {
		return x.BlockchainHash
	}
	return nil
}

type CreateDepositAddressesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error *Error `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *CreateDepositAddressesResponse) Reset() {
	*x = CreateDepositAddressesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_privateService_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateDepositAddressesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateDepositAddressesResponse) ProtoMessage() {}

func (x *CreateDepositAddressesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_privateService_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateDepositAddressesResponse.ProtoReflect.Descriptor instead.
func (*CreateDepositAddressesResponse) Descriptor() ([]byte, []int) {
	return file_privateService_proto_rawDescGZIP(), []int{29}
}

func (x *CreateDepositAddressesResponse) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

type GetDepositAddressRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AssetId string `protobuf:"bytes,1,opt,name=assetId,proto3" json:"assetId,omitempty"`
}

func (x *GetDepositAddressRequest) Reset() {
	*x = GetDepositAddressRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_privateService_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDepositAddressRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDepositAddressRequest) ProtoMessage() {}

func (x *GetDepositAddressRequest) ProtoReflect() protoreflect.Message {
	mi := &file_privateService_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDepositAddressRequest.ProtoReflect.Descriptor instead.
func (*GetDepositAddressRequest) Descriptor() ([]byte, []int) {
	return file_privateService_proto_rawDescGZIP(), []int{30}
}

func (x *GetDepositAddressRequest) GetAssetId() string {
	if x != nil {
		return x.AssetId
	}
	return ""
}

type GetDepositAddressResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Payload *DepositAddress `protobuf:"bytes,1,opt,name=payload,proto3" json:"payload,omitempty"`
	Error   *Error          `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *GetDepositAddressResponse) Reset() {
	*x = GetDepositAddressResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_privateService_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDepositAddressResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDepositAddressResponse) ProtoMessage() {}

func (x *GetDepositAddressResponse) ProtoReflect() protoreflect.Message {
	mi := &file_privateService_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDepositAddressResponse.ProtoReflect.Descriptor instead.
func (*GetDepositAddressResponse) Descriptor() ([]byte, []int) {
	return file_privateService_proto_rawDescGZIP(), []int{31}
}

func (x *GetDepositAddressResponse) GetPayload() *DepositAddress {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *GetDepositAddressResponse) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

type GetDepositAddressesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Payload []*DepositAddress `protobuf:"bytes,1,rep,name=payload,proto3" json:"payload,omitempty"`
	Error   *Error            `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *GetDepositAddressesResponse) Reset() {
	*x = GetDepositAddressesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_privateService_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDepositAddressesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDepositAddressesResponse) ProtoMessage() {}

func (x *GetDepositAddressesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_privateService_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDepositAddressesResponse.ProtoReflect.Descriptor instead.
func (*GetDepositAddressesResponse) Descriptor() ([]byte, []int) {
	return file_privateService_proto_rawDescGZIP(), []int{32}
}

func (x *GetDepositAddressesResponse) GetPayload() []*DepositAddress {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *GetDepositAddressesResponse) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

type DepositAddress struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address          *wrapperspb.StringValue `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	BaseAddress      *wrapperspb.StringValue `protobuf:"bytes,2,opt,name=baseAddress,proto3" json:"baseAddress,omitempty"`
	AddressExtension *wrapperspb.StringValue `protobuf:"bytes,3,opt,name=addressExtension,proto3" json:"addressExtension,omitempty"`
	State            string                  `protobuf:"bytes,4,opt,name=state,proto3" json:"state,omitempty"`
	AssetId          string                  `protobuf:"bytes,5,opt,name=assetId,proto3" json:"assetId,omitempty"`
	Symbol           string                  `protobuf:"bytes,6,opt,name=symbol,proto3" json:"symbol,omitempty"`
}

func (x *DepositAddress) Reset() {
	*x = DepositAddress{}
	if protoimpl.UnsafeEnabled {
		mi := &file_privateService_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DepositAddress) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DepositAddress) ProtoMessage() {}

func (x *DepositAddress) ProtoReflect() protoreflect.Message {
	mi := &file_privateService_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DepositAddress.ProtoReflect.Descriptor instead.
func (*DepositAddress) Descriptor() ([]byte, []int) {
	return file_privateService_proto_rawDescGZIP(), []int{33}
}

func (x *DepositAddress) GetAddress() *wrapperspb.StringValue {
	if x != nil {
		return x.Address
	}
	return nil
}

func (x *DepositAddress) GetBaseAddress() *wrapperspb.StringValue {
	if x != nil {
		return x.BaseAddress
	}
	return nil
}

func (x *DepositAddress) GetAddressExtension() *wrapperspb.StringValue {
	if x != nil {
		return x.AddressExtension
	}
	return nil
}

func (x *DepositAddress) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *DepositAddress) GetAssetId() string {
	if x != nil {
		return x.AssetId
	}
	return ""
}

func (x *DepositAddress) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

type CreateWithdrawalRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequestId                   string                  `protobuf:"bytes,1,opt,name=requestId,proto3" json:"requestId,omitempty"`
	AssetId                     string                  `protobuf:"bytes,2,opt,name=assetId,proto3" json:"assetId,omitempty"`
	Volume                      string                  `protobuf:"bytes,3,opt,name=volume,proto3" json:"volume,omitempty"`
	DestinationAddress          string                  `protobuf:"bytes,4,opt,name=destinationAddress,proto3" json:"destinationAddress,omitempty"`
	DestinationAddressExtension *wrapperspb.StringValue `protobuf:"bytes,5,opt,name=destinationAddressExtension,proto3" json:"destinationAddressExtension,omitempty"`
}

func (x *CreateWithdrawalRequest) Reset() {
	*x = CreateWithdrawalRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_privateService_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateWithdrawalRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateWithdrawalRequest) ProtoMessage() {}

func (x *CreateWithdrawalRequest) ProtoReflect() protoreflect.Message {
	mi := &file_privateService_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateWithdrawalRequest.ProtoReflect.Descriptor instead.
func (*CreateWithdrawalRequest) Descriptor() ([]byte, []int) {
	return file_privateService_proto_rawDescGZIP(), []int{34}
}

func (x *CreateWithdrawalRequest) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

func (x *CreateWithdrawalRequest) GetAssetId() string {
	if x != nil {
		return x.AssetId
	}
	return ""
}

func (x *CreateWithdrawalRequest) GetVolume() string {
	if x != nil {
		return x.Volume
	}
	return ""
}

func (x *CreateWithdrawalRequest) GetDestinationAddress() string {
	if x != nil {
		return x.DestinationAddress
	}
	return ""
}

func (x *CreateWithdrawalRequest) GetDestinationAddressExtension() *wrapperspb.StringValue {
	if x != nil {
		return x.DestinationAddressExtension
	}
	return nil
}

type CreateWithdrawalResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Payload string `protobuf:"bytes,1,opt,name=payload,proto3" json:"payload,omitempty"`
	Error   *Error `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *CreateWithdrawalResponse) Reset() {
	*x = CreateWithdrawalResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_privateService_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateWithdrawalResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateWithdrawalResponse) ProtoMessage() {}

func (x *CreateWithdrawalResponse) ProtoReflect() protoreflect.Message {
	mi := &file_privateService_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateWithdrawalResponse.ProtoReflect.Descriptor instead.
func (*CreateWithdrawalResponse) Descriptor() ([]byte, []int) {
	return file_privateService_proto_rawDescGZIP(), []int{35}
}

func (x *CreateWithdrawalResponse) GetPayload() string {
	if x != nil {
		return x.Payload
	}
	return ""
}

func (x *CreateWithdrawalResponse) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

type LimitOrderResponse_LimitOrderPayload struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrderId string `protobuf:"bytes,1,opt,name=orderId,proto3" json:"orderId,omitempty"`
}

func (x *LimitOrderResponse_LimitOrderPayload) Reset() {
	*x = LimitOrderResponse_LimitOrderPayload{}
	if protoimpl.UnsafeEnabled {
		mi := &file_privateService_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LimitOrderResponse_LimitOrderPayload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LimitOrderResponse_LimitOrderPayload) ProtoMessage() {}

func (x *LimitOrderResponse_LimitOrderPayload) ProtoReflect() protoreflect.Message {
	mi := &file_privateService_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LimitOrderResponse_LimitOrderPayload.ProtoReflect.Descriptor instead.
func (*LimitOrderResponse_LimitOrderPayload) Descriptor() ([]byte, []int) {
	return file_privateService_proto_rawDescGZIP(), []int{12, 0}
}

func (x *LimitOrderResponse_LimitOrderPayload) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

type BulkLimitOrderResponse_BulkLimitOrderPayload struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AssetPairId string                 `protobuf:"bytes,1,opt,name=assetPairId,proto3" json:"assetPairId,omitempty"`
	Statuses    []*BulkOrderItemStatus `protobuf:"bytes,3,rep,name=statuses,proto3" json:"statuses,omitempty"`
}

func (x *BulkLimitOrderResponse_BulkLimitOrderPayload) Reset() {
	*x = BulkLimitOrderResponse_BulkLimitOrderPayload{}
	if protoimpl.UnsafeEnabled {
		mi := &file_privateService_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BulkLimitOrderResponse_BulkLimitOrderPayload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BulkLimitOrderResponse_BulkLimitOrderPayload) ProtoMessage() {}

func (x *BulkLimitOrderResponse_BulkLimitOrderPayload) ProtoReflect() protoreflect.Message {
	mi := &file_privateService_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BulkLimitOrderResponse_BulkLimitOrderPayload.ProtoReflect.Descriptor instead.
func (*BulkLimitOrderResponse_BulkLimitOrderPayload) Descriptor() ([]byte, []int) {
	return file_privateService_proto_rawDescGZIP(), []int{13, 0}
}

func (x *BulkLimitOrderResponse_BulkLimitOrderPayload) GetAssetPairId() string {
	if x != nil {
		return x.AssetPairId
	}
	return ""
}

func (x *BulkLimitOrderResponse_BulkLimitOrderPayload) GetStatuses() []*BulkOrderItemStatus {
	if x != nil {
		return x.Statuses
	}
	return nil
}

type MarketOrderResponse_MarketOrderPayload struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrderId string `protobuf:"bytes,1,opt,name=orderId,proto3" json:"orderId,omitempty"`
	Price   string `protobuf:"bytes,2,opt,name=price,proto3" json:"price,omitempty"`
}

func (x *MarketOrderResponse_MarketOrderPayload) Reset() {
	*x = MarketOrderResponse_MarketOrderPayload{}
	if protoimpl.UnsafeEnabled {
		mi := &file_privateService_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MarketOrderResponse_MarketOrderPayload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MarketOrderResponse_MarketOrderPayload) ProtoMessage() {}

func (x *MarketOrderResponse_MarketOrderPayload) ProtoReflect() protoreflect.Message {
	mi := &file_privateService_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MarketOrderResponse_MarketOrderPayload.ProtoReflect.Descriptor instead.
func (*MarketOrderResponse_MarketOrderPayload) Descriptor() ([]byte, []int) {
	return file_privateService_proto_rawDescGZIP(), []int{15, 0}
}

func (x *MarketOrderResponse_MarketOrderPayload) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

func (x *MarketOrderResponse_MarketOrderPayload) GetPrice() string {
	if x != nil {
		return x.Price
	}
	return ""
}

var File_privateService_proto protoreflect.FileDescriptor

var file_privateService_proto_rawDesc = []byte{
	0x0a, 0x14, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x03, 0x68, 0x66, 0x74, 0x1a, 0x1b, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70,
	0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x77, 0x72, 0x61, 0x70, 0x70,
	0x65, 0x72, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0c, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x82, 0x01, 0x0a, 0x11, 0x4c, 0x69, 0x6d, 0x69,
	0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a,
	0x0b, 0x61, 0x73, 0x73, 0x65, 0x74, 0x50, 0x61, 0x69, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x61, 0x73, 0x73, 0x65, 0x74, 0x50, 0x61, 0x69, 0x72, 0x49, 0x64, 0x12,
	0x1d, 0x0a, 0x04, 0x73, 0x69, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x09, 0x2e,
	0x68, 0x66, 0x74, 0x2e, 0x53, 0x69, 0x64, 0x65, 0x52, 0x04, 0x73, 0x69, 0x64, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x22, 0xdf, 0x01, 0x0a,
	0x15, 0x42, 0x75, 0x6c, 0x6b, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x61, 0x73, 0x73, 0x65, 0x74, 0x50,
	0x61, 0x69, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x73, 0x73,
	0x65, 0x74, 0x50, 0x61, 0x69, 0x72, 0x49, 0x64, 0x12, 0x32, 0x0a, 0x14, 0x63, 0x61, 0x6e, 0x63,
	0x65, 0x6c, 0x50, 0x72, 0x65, 0x76, 0x69, 0x6f, 0x75, 0x73, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x14, 0x63, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x50, 0x72,
	0x65, 0x76, 0x69, 0x6f, 0x75, 0x73, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x12, 0x31, 0x0a, 0x0a,
	0x63, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x4d, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x0f, 0x2e, 0x68, 0x66, 0x74, 0x2e, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x4d, 0x6f, 0x64,
	0x65, 0x48, 0x00, 0x52, 0x0a, 0x63, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x4d, 0x6f, 0x64, 0x65, 0x12,
	0x26, 0x0a, 0x06, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x0e, 0x2e, 0x68, 0x66, 0x74, 0x2e, 0x42, 0x75, 0x6c, 0x6b, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52,
	0x06, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x42, 0x15, 0x0a, 0x13, 0x6f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x61, 0x6c, 0x5f, 0x63, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x4d, 0x6f, 0x64, 0x65, 0x22, 0x6e,
	0x0a, 0x09, 0x42, 0x75, 0x6c, 0x6b, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x1d, 0x0a, 0x04, 0x73,
	0x69, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x09, 0x2e, 0x68, 0x66, 0x74, 0x2e,
	0x53, 0x69, 0x64, 0x65, 0x52, 0x04, 0x73, 0x69, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x6f,
	0x6c, 0x75, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x76, 0x6f, 0x6c, 0x75,
	0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x6c, 0x64, 0x49,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6f, 0x6c, 0x64, 0x49, 0x64, 0x22, 0x6d,
	0x0a, 0x12, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x61, 0x73, 0x73, 0x65, 0x74, 0x50, 0x61, 0x69,
	0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x73, 0x73, 0x65, 0x74,
	0x50, 0x61, 0x69, 0x72, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x04, 0x73, 0x69, 0x64, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x09, 0x2e, 0x68, 0x66, 0x74, 0x2e, 0x53, 0x69, 0x64, 0x65, 0x52,
	0x04, 0x73, 0x69, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x22, 0x28, 0x0a,
	0x0c, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a,
	0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x22, 0x5d, 0x0a, 0x0d, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x61, 0x73, 0x73, 0x65,
	0x74, 0x50, 0x61, 0x69, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61,
	0x73, 0x73, 0x65, 0x74, 0x50, 0x61, 0x69, 0x72, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66,
	0x66, 0x73, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73,
	0x65, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x61, 0x6b, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x04, 0x74, 0x61, 0x6b, 0x65, 0x22, 0x56, 0x0a, 0x13, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a,
	0x0b, 0x61, 0x73, 0x73, 0x65, 0x74, 0x50, 0x61, 0x69, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x61, 0x73, 0x73, 0x65, 0x74, 0x50, 0x61, 0x69, 0x72, 0x49, 0x64, 0x12,
	0x1d, 0x0a, 0x04, 0x73, 0x69, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x09, 0x2e,
	0x68, 0x66, 0x74, 0x2e, 0x53, 0x69, 0x64, 0x65, 0x52, 0x04, 0x73, 0x69, 0x64, 0x65, 0x22, 0x2e,
	0x0a, 0x12, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x22, 0x8f,
	0x02, 0x0a, 0x0d, 0x54, 0x72, 0x61, 0x64, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x20, 0x0a, 0x0b, 0x61, 0x73, 0x73, 0x65, 0x74, 0x50, 0x61, 0x69, 0x72, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x73, 0x73, 0x65, 0x74, 0x50, 0x61, 0x69, 0x72,
	0x49, 0x64, 0x12, 0x1f, 0x0a, 0x04, 0x73, 0x69, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x09, 0x2e, 0x68, 0x66, 0x74, 0x2e, 0x53, 0x69, 0x64, 0x65, 0x48, 0x00, 0x52, 0x04, 0x73,
	0x69, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74,
	0x61, 0x6b, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74, 0x61, 0x6b, 0x65, 0x12,
	0x30, 0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x48, 0x01, 0x52, 0x04, 0x66, 0x72, 0x6f,
	0x6d, 0x12, 0x2c, 0x0a, 0x02, 0x74, 0x6f, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x48, 0x02, 0x52, 0x02, 0x74, 0x6f, 0x42,
	0x0f, 0x0a, 0x0d, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x73, 0x69, 0x64, 0x65,
	0x42, 0x0f, 0x0a, 0x0d, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x66, 0x72, 0x6f,
	0x6d, 0x42, 0x0d, 0x0a, 0x0b, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x74, 0x6f,
	0x22, 0x49, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x61, 0x6b, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74, 0x61, 0x6b, 0x65, 0x22, 0x2e, 0x0a, 0x12, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x54, 0x72, 0x61, 0x64, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x18, 0x0a, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x22, 0x63, 0x0a, 0x10, 0x42,
	0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x26, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x0c, 0x2e, 0x68, 0x66, 0x74, 0x2e, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x07,
	0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x27, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x68, 0x66, 0x74, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x22, 0xb1, 0x01, 0x0a, 0x12, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x43, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f,
	0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x68, 0x66, 0x74, 0x2e, 0x4c,
	0x69, 0x6d, 0x69, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x2e, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x50, 0x61, 0x79, 0x6c,
	0x6f, 0x61, 0x64, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x27, 0x0a, 0x05,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x68, 0x66,
	0x74, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x1a, 0x2d, 0x0a, 0x11, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x49, 0x64, 0x22, 0xff, 0x01, 0x0a, 0x16, 0x42, 0x75, 0x6c, 0x6b, 0x4c, 0x69, 0x6d,
	0x69, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x4b, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x31, 0x2e, 0x68, 0x66, 0x74, 0x2e, 0x42, 0x75, 0x6c, 0x6b, 0x4c, 0x69, 0x6d, 0x69, 0x74,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x42, 0x75,
	0x6c, 0x6b, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x50, 0x61, 0x79, 0x6c,
	0x6f, 0x61, 0x64, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x27, 0x0a, 0x05,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x68, 0x66,
	0x74, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x1a, 0x6f, 0x0a, 0x15, 0x42, 0x75, 0x6c, 0x6b, 0x4c, 0x69, 0x6d,
	0x69, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x20,
	0x0a, 0x0b, 0x61, 0x73, 0x73, 0x65, 0x74, 0x50, 0x61, 0x69, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x73, 0x73, 0x65, 0x74, 0x50, 0x61, 0x69, 0x72, 0x49, 0x64,
	0x12, 0x34, 0x0a, 0x08, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x18, 0x2e, 0x68, 0x66, 0x74, 0x2e, 0x42, 0x75, 0x6c, 0x6b, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x49, 0x74, 0x65, 0x6d, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x08, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x65, 0x73, 0x22, 0x80, 0x01, 0x0a, 0x13, 0x42, 0x75, 0x6c, 0x6b, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x49, 0x74, 0x65, 0x6d, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x2b,
	0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x15, 0x2e,
	0x68, 0x66, 0x74, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x43, 0x6f, 0x64, 0x65, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x76,
	0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x76, 0x6f, 0x6c,
	0x75, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x22, 0xcb, 0x01, 0x0a, 0x13, 0x4d, 0x61,
	0x72, 0x6b, 0x65, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x45, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x68, 0x66, 0x74, 0x2e, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x4d, 0x61, 0x72,
	0x6b, 0x65, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x52,
	0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x27, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x68, 0x66, 0x74, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x1a, 0x44, 0x0a, 0x12, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x22, 0x5e, 0x0a, 0x0d, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x24, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c,
	0x6f, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x68, 0x66, 0x74, 0x2e,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x27,
	0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e,
	0x68, 0x66, 0x74, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x5f, 0x0a, 0x0e, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x24, 0x0a, 0x07, 0x70, 0x61, 0x79,
	0x6c, 0x6f, 0x61, 0x64, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x68, 0x66, 0x74,
	0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12,
	0x27, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11,
	0x2e, 0x68, 0x66, 0x74, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x58, 0x0a, 0x13, 0x43, 0x61, 0x6e, 0x63,
	0x65, 0x6c, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x27, 0x0a, 0x05, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x68, 0x66, 0x74, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x22, 0x5f, 0x0a, 0x0e, 0x54, 0x72, 0x61, 0x64, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x24, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x68, 0x66, 0x74, 0x2e, 0x54, 0x72, 0x61, 0x64,
	0x65, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x27, 0x0a, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x68, 0x66, 0x74, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x22, 0x97, 0x01, 0x0a, 0x07, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x61, 0x73, 0x73, 0x65, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x61, 0x73, 0x73, 0x65, 0x74, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x76, 0x61,
	0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x76,
	0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x64, 0x12, 0x38, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x22, 0xbb, 0x03,
	0x0a, 0x05, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x38, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x12, 0x4c, 0x0a, 0x12, 0x6c, 0x61, 0x73, 0x74, 0x54, 0x72, 0x61, 0x64, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x48, 0x00, 0x52, 0x12, 0x6c, 0x61, 0x73,
	0x74, 0x54, 0x72, 0x61, 0x64, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x61, 0x73, 0x73, 0x65, 0x74,
	0x50, 0x61, 0x69, 0x72, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x73,
	0x73, 0x65, 0x74, 0x50, 0x61, 0x69, 0x72, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a,
	0x04, 0x73, 0x69, 0x64, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x09, 0x2e, 0x68, 0x66,
	0x74, 0x2e, 0x53, 0x69, 0x64, 0x65, 0x52, 0x04, 0x73, 0x69, 0x64, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x72, 0x69,
	0x63, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x66, 0x69,
	0x6c, 0x6c, 0x65, 0x64, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x66, 0x69, 0x6c, 0x6c, 0x65, 0x64, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x12, 0x28,
	0x0a, 0x0f, 0x72, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x56, 0x6f, 0x6c, 0x75, 0x6d,
	0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x72, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x69,
	0x6e, 0x67, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x73, 0x74,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x73, 0x74, 0x42, 0x1d, 0x0a, 0x1b,
	0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x6c, 0x61, 0x73, 0x74, 0x54, 0x72, 0x61,
	0x64, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x22, 0xff, 0x02, 0x0a, 0x05,
	0x54, 0x72, 0x61, 0x64, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x38, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12,
	0x20, 0x0a, 0x0b, 0x61, 0x73, 0x73, 0x65, 0x74, 0x50, 0x61, 0x69, 0x72, 0x49, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x73, 0x73, 0x65, 0x74, 0x50, 0x61, 0x69, 0x72, 0x49,
	0x64, 0x12, 0x18, 0x0a, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x72,
	0x6f, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x62, 0x61, 0x73, 0x65, 0x56, 0x6f, 0x6c,
	0x75, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x62, 0x61, 0x73, 0x65, 0x56,
	0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x71, 0x75, 0x6f, 0x74, 0x65, 0x56, 0x6f,
	0x6c, 0x75, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x71, 0x75, 0x6f, 0x74,
	0x65, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x62, 0x61, 0x73, 0x65, 0x41,
	0x73, 0x73, 0x65, 0x74, 0x49, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x62, 0x61,
	0x73, 0x65, 0x41, 0x73, 0x73, 0x65, 0x74, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x71, 0x75, 0x6f,
	0x74, 0x65, 0x41, 0x73, 0x73, 0x65, 0x74, 0x49, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x71, 0x75, 0x6f, 0x74, 0x65, 0x41, 0x73, 0x73, 0x65, 0x74, 0x49, 0x64, 0x12, 0x1f, 0x0a,
	0x03, 0x66, 0x65, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x68, 0x66, 0x74,
	0x2e, 0x54, 0x72, 0x61, 0x64, 0x65, 0x46, 0x65, 0x65, 0x52, 0x03, 0x66, 0x65, 0x65, 0x12, 0x1d,
	0x0a, 0x04, 0x73, 0x69, 0x64, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x09, 0x2e, 0x68,
	0x66, 0x74, 0x2e, 0x53, 0x69, 0x64, 0x65, 0x52, 0x04, 0x73, 0x69, 0x64, 0x65, 0x22, 0x38, 0x0a,
	0x08, 0x54, 0x72, 0x61, 0x64, 0x65, 0x46, 0x65, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x61, 0x73, 0x73, 0x65, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x61, 0x73, 0x73, 0x65, 0x74, 0x49, 0x64, 0x22, 0x39, 0x0a, 0x0d, 0x42, 0x61, 0x6c, 0x61, 0x6e,
	0x63, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x28, 0x0a, 0x08, 0x62, 0x61, 0x6c, 0x61,
	0x6e, 0x63, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x68, 0x66, 0x74,
	0x2e, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x08, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63,
	0x65, 0x73, 0x22, 0x31, 0x0a, 0x0b, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x12, 0x22, 0x0a, 0x06, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x0a, 0x2e, 0x68, 0x66, 0x74, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x06, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x73, 0x22, 0x31, 0x0a, 0x0b, 0x54, 0x72, 0x61, 0x64, 0x65, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x12, 0x22, 0x0a, 0x06, 0x74, 0x72, 0x61, 0x64, 0x65, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x68, 0x66, 0x74, 0x2e, 0x54, 0x72, 0x61, 0x64, 0x65,
	0x52, 0x06, 0x74, 0x72, 0x61, 0x64, 0x65, 0x73, 0x22, 0x55, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x4f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x35, 0x0a, 0x0a, 0x6f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x68,
	0x66, 0x74, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x69, 0x73, 0x74,
	0x6f, 0x72, 0x79, 0x52, 0x0a, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22,
	0x96, 0x02, 0x0a, 0x10, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x69, 0x73,
	0x74, 0x6f, 0x72, 0x79, 0x12, 0x20, 0x0a, 0x0b, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x73, 0x73, 0x65, 0x74, 0x49,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x73, 0x73, 0x65, 0x74, 0x49, 0x64,
	0x12, 0x20, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x56, 0x6f, 0x6c, 0x75,
	0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x66, 0x65, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x66, 0x65, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x38, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x12, 0x44, 0x0a, 0x0e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x63, 0x68, 0x61, 0x69, 0x6e,
	0x48, 0x61, 0x73, 0x68, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72,
	0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x63,
	0x68, 0x61, 0x69, 0x6e, 0x48, 0x61, 0x73, 0x68, 0x22, 0x49, 0x0a, 0x1e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x27, 0x0a, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x68, 0x66, 0x74, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x22, 0x34, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69,
	0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x18, 0x0a, 0x07, 0x61, 0x73, 0x73, 0x65, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x61, 0x73, 0x73, 0x65, 0x74, 0x49, 0x64, 0x22, 0x73, 0x0a, 0x19, 0x47, 0x65, 0x74,
	0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2d, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x68, 0x66, 0x74, 0x2e, 0x44, 0x65,
	0x70, 0x6f, 0x73, 0x69, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x07, 0x70, 0x61,
	0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x27, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x68, 0x66, 0x74, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x75,
	0x0a, 0x1b, 0x47, 0x65, 0x74, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2d, 0x0a,
	0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13,
	0x2e, 0x68, 0x66, 0x74, 0x2e, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x27, 0x0a, 0x05,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x68, 0x66,
	0x74, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x9a, 0x02, 0x0a, 0x0e, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69,
	0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x36, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69,
	0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x12, 0x3e, 0x0a, 0x0b, 0x62, 0x61, 0x73, 0x65, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x52, 0x0b, 0x62, 0x61, 0x73, 0x65, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x12, 0x48, 0x0a, 0x10, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x45, 0x78, 0x74, 0x65, 0x6e,
	0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72,
	0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x10, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74,
	0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x61, 0x73, 0x73, 0x65, 0x74, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x61, 0x73, 0x73, 0x65, 0x74, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x79,
	0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x79, 0x6d, 0x62,
	0x6f, 0x6c, 0x22, 0xf9, 0x01, 0x0a, 0x17, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x57, 0x69, 0x74,
	0x68, 0x64, 0x72, 0x61, 0x77, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c,
	0x0a, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07,
	0x61, 0x73, 0x73, 0x65, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61,
	0x73, 0x73, 0x65, 0x74, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x12, 0x2e,
	0x0a, 0x12, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x64, 0x65, 0x73, 0x74,
	0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x5e,
	0x0a, 0x1b, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x52, 0x1b, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x5d,
	0x0a, 0x18, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77,
	0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x61,
	0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x61, 0x79,
	0x6c, 0x6f, 0x61, 0x64, 0x12, 0x27, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x68, 0x66, 0x74, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x2a, 0x19, 0x0a,
	0x04, 0x53, 0x69, 0x64, 0x65, 0x12, 0x07, 0x0a, 0x03, 0x62, 0x75, 0x79, 0x10, 0x00, 0x12, 0x08,
	0x0a, 0x04, 0x73, 0x65, 0x6c, 0x6c, 0x10, 0x01, 0x2a, 0x48, 0x0a, 0x0a, 0x43, 0x61, 0x6e, 0x63,
	0x65, 0x6c, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x0c, 0x6e, 0x6f, 0x74, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x53, 0x69, 0x64, 0x65, 0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09, 0x62, 0x6f, 0x74, 0x68,
	0x53, 0x69, 0x64, 0x65, 0x73, 0x10, 0x01, 0x12, 0x0c, 0x0a, 0x08, 0x73, 0x65, 0x6c, 0x6c, 0x53,
	0x69, 0x64, 0x65, 0x10, 0x02, 0x12, 0x0b, 0x0a, 0x07, 0x62, 0x75, 0x79, 0x53, 0x69, 0x64, 0x65,
	0x10, 0x03, 0x2a, 0x42, 0x0a, 0x0d, 0x42, 0x75, 0x6c, 0x6b, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x43,
	0x6f, 0x64, 0x65, 0x12, 0x15, 0x0a, 0x11, 0x69, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x49, 0x6e,
	0x70, 0x75, 0x74, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x72, 0x65,
	0x6a, 0x65, 0x63, 0x74, 0x65, 0x64, 0x10, 0x01, 0x12, 0x0c, 0x0a, 0x07, 0x72, 0x75, 0x6e, 0x74,
	0x69, 0x6d, 0x65, 0x10, 0xf4, 0x03, 0x32, 0xff, 0x09, 0x0a, 0x0e, 0x50, 0x72, 0x69, 0x76, 0x61,
	0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x3c, 0x0a, 0x0b, 0x47, 0x65, 0x74,
	0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x1a, 0x15, 0x2e, 0x68, 0x66, 0x74, 0x2e, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x42, 0x0a, 0x0f, 0x50, 0x6c, 0x61, 0x63, 0x65,
	0x4c, 0x69, 0x6d, 0x69, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x16, 0x2e, 0x68, 0x66, 0x74,
	0x2e, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x17, 0x2e, 0x68, 0x66, 0x74, 0x2e, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4e, 0x0a, 0x13, 0x50,
	0x6c, 0x61, 0x63, 0x65, 0x42, 0x75, 0x6c, 0x6b, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x12, 0x1a, 0x2e, 0x68, 0x66, 0x74, 0x2e, 0x42, 0x75, 0x6c, 0x6b, 0x4c, 0x69, 0x6d,
	0x69, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b,
	0x2e, 0x68, 0x66, 0x74, 0x2e, 0x42, 0x75, 0x6c, 0x6b, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x45, 0x0a, 0x10, 0x50,
	0x6c, 0x61, 0x63, 0x65, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12,
	0x17, 0x2e, 0x68, 0x66, 0x74, 0x2e, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x68, 0x66, 0x74, 0x2e, 0x4d,
	0x61, 0x72, 0x6b, 0x65, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x31, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x11,
	0x2e, 0x68, 0x66, 0x74, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x12, 0x2e, 0x68, 0x66, 0x74, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3a, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x41, 0x63, 0x74, 0x69,
	0x76, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x12, 0x12, 0x2e, 0x68, 0x66, 0x74, 0x2e, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e, 0x68,
	0x66, 0x74, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x3a, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x64, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x73, 0x12, 0x12, 0x2e, 0x68, 0x66, 0x74, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e, 0x68, 0x66, 0x74, 0x2e, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x45, 0x0a,
	0x0f, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x41, 0x6c, 0x6c, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73,
	0x12, 0x18, 0x2e, 0x68, 0x66, 0x74, 0x2e, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x68, 0x66, 0x74,
	0x2e, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x40, 0x0a, 0x0b, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x12, 0x17, 0x2e, 0x68, 0x66, 0x74, 0x2e, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x68,
	0x66, 0x74, 0x2e, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x34, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61,
	0x64, 0x65, 0x73, 0x12, 0x12, 0x2e, 0x68, 0x66, 0x74, 0x2e, 0x54, 0x72, 0x61, 0x64, 0x65, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e, 0x68, 0x66, 0x74, 0x2e, 0x54, 0x72,
	0x61, 0x64, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3e, 0x0a, 0x0e,
	0x47, 0x65, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x54, 0x72, 0x61, 0x64, 0x65, 0x73, 0x12, 0x17,
	0x2e, 0x68, 0x66, 0x74, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x54, 0x72, 0x61, 0x64, 0x65, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e, 0x68, 0x66, 0x74, 0x2e, 0x54, 0x72,
	0x61, 0x64, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x41, 0x0a, 0x11,
	0x47, 0x65, 0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x73, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x12, 0x2e, 0x68, 0x66, 0x74, 0x2e,
	0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x30, 0x01, 0x12,
	0x3d, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x64, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x73, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x10, 0x2e, 0x68, 0x66, 0x74,
	0x2e, 0x54, 0x72, 0x61, 0x64, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x30, 0x01, 0x12, 0x5b,
	0x0a, 0x14, 0x47, 0x65, 0x74, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x48,
	0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x20, 0x2e, 0x68, 0x66, 0x74, 0x2e, 0x47, 0x65, 0x74,
	0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72,
	0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x68, 0x66, 0x74, 0x2e, 0x47,
	0x65, 0x74, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x48, 0x69, 0x73, 0x74,
	0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x55, 0x0a, 0x16, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x65, 0x73, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x23, 0x2e,
	0x68, 0x66, 0x74, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69,
	0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x52, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74,
	0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1d, 0x2e, 0x68, 0x66, 0x74, 0x2e, 0x47, 0x65,
	0x74, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x68, 0x66, 0x74, 0x2e, 0x47, 0x65, 0x74,
	0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4f, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x44, 0x65, 0x70,
	0x6f, 0x73, 0x69, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x12, 0x16, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x20, 0x2e, 0x68, 0x66, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x44,
	0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4f, 0x0a, 0x10, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x61, 0x6c, 0x12, 0x1c, 0x2e, 0x68, 0x66,
	0x74, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77,
	0x61, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x68, 0x66, 0x74, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x61, 0x6c,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x27, 0x5a, 0x0a, 0x2e, 0x2f, 0x3b, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0xaa, 0x02, 0x18, 0x4c, 0x79, 0x6b, 0x6b, 0x65, 0x2e, 0x48,
	0x66, 0x74, 0x41, 0x70, 0x69, 0x2e, 0x41, 0x70, 0x69, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63,
	0x74, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_privateService_proto_rawDescOnce sync.Once
	file_privateService_proto_rawDescData = file_privateService_proto_rawDesc
)

func file_privateService_proto_rawDescGZIP() []byte {
	file_privateService_proto_rawDescOnce.Do(func() {
		file_privateService_proto_rawDescData = protoimpl.X.CompressGZIP(file_privateService_proto_rawDescData)
	})
	return file_privateService_proto_rawDescData
}

var file_privateService_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_privateService_proto_msgTypes = make([]protoimpl.MessageInfo, 39)
var file_privateService_proto_goTypes = []interface{}{
	(Side)(0),                                            // 0: hft.Side
	(CancelMode)(0),                                      // 1: hft.CancelMode
	(BulkErrorCode)(0),                                   // 2: hft.BulkErrorCode
	(*LimitOrderRequest)(nil),                            // 3: hft.LimitOrderRequest
	(*BulkLimitOrderRequest)(nil),                        // 4: hft.BulkLimitOrderRequest
	(*BulkOrder)(nil),                                    // 5: hft.BulkOrder
	(*MarketOrderRequest)(nil),                           // 6: hft.MarketOrderRequest
	(*OrderRequest)(nil),                                 // 7: hft.OrderRequest
	(*OrdersRequest)(nil),                                // 8: hft.OrdersRequest
	(*CancelOrdersRequest)(nil),                          // 9: hft.CancelOrdersRequest
	(*CancelOrderRequest)(nil),                           // 10: hft.CancelOrderRequest
	(*TradesRequest)(nil),                                // 11: hft.TradesRequest
	(*GetOperationsHistoryRequest)(nil),                  // 12: hft.GetOperationsHistoryRequest
	(*OrderTradesRequest)(nil),                           // 13: hft.OrderTradesRequest
	(*BalancesResponse)(nil),                             // 14: hft.BalancesResponse
	(*LimitOrderResponse)(nil),                           // 15: hft.LimitOrderResponse
	(*BulkLimitOrderResponse)(nil),                       // 16: hft.BulkLimitOrderResponse
	(*BulkOrderItemStatus)(nil),                          // 17: hft.BulkOrderItemStatus
	(*MarketOrderResponse)(nil),                          // 18: hft.MarketOrderResponse
	(*OrderResponse)(nil),                                // 19: hft.OrderResponse
	(*OrdersResponse)(nil),                               // 20: hft.OrdersResponse
	(*CancelOrderResponse)(nil),                          // 21: hft.CancelOrderResponse
	(*TradesResponse)(nil),                               // 22: hft.TradesResponse
	(*Balance)(nil),                                      // 23: hft.Balance
	(*Order)(nil),                                        // 24: hft.Order
	(*Trade)(nil),                                        // 25: hft.Trade
	(*TradeFee)(nil),                                     // 26: hft.TradeFee
	(*BalanceUpdate)(nil),                                // 27: hft.BalanceUpdate
	(*OrderUpdate)(nil),                                  // 28: hft.OrderUpdate
	(*TradeUpdate)(nil),                                  // 29: hft.TradeUpdate
	(*GetOperationsHistoryResponse)(nil),                 // 30: hft.GetOperationsHistoryResponse
	(*OperationHistory)(nil),                             // 31: hft.OperationHistory
	(*CreateDepositAddressesResponse)(nil),               // 32: hft.CreateDepositAddressesResponse
	(*GetDepositAddressRequest)(nil),                     // 33: hft.GetDepositAddressRequest
	(*GetDepositAddressResponse)(nil),                    // 34: hft.GetDepositAddressResponse
	(*GetDepositAddressesResponse)(nil),                  // 35: hft.GetDepositAddressesResponse
	(*DepositAddress)(nil),                               // 36: hft.DepositAddress
	(*CreateWithdrawalRequest)(nil),                      // 37: hft.CreateWithdrawalRequest
	(*CreateWithdrawalResponse)(nil),                     // 38: hft.CreateWithdrawalResponse
	(*LimitOrderResponse_LimitOrderPayload)(nil),         // 39: hft.LimitOrderResponse.LimitOrderPayload
	(*BulkLimitOrderResponse_BulkLimitOrderPayload)(nil), // 40: hft.BulkLimitOrderResponse.BulkLimitOrderPayload
	(*MarketOrderResponse_MarketOrderPayload)(nil),       // 41: hft.MarketOrderResponse.MarketOrderPayload
	(*timestamppb.Timestamp)(nil),                        // 42: google.protobuf.Timestamp
	(*Error)(nil),                                        // 43: hft.common.Error
	(ErrorCode)(0),                                       // 44: hft.common.ErrorCode
	(*wrapperspb.StringValue)(nil),                       // 45: google.protobuf.StringValue
	(*emptypb.Empty)(nil),                                // 46: google.protobuf.Empty
}
var file_privateService_proto_depIdxs = []int32{
	0,  // 0: hft.LimitOrderRequest.side:type_name -> hft.Side
	1,  // 1: hft.BulkLimitOrderRequest.cancelMode:type_name -> hft.CancelMode
	5,  // 2: hft.BulkLimitOrderRequest.orders:type_name -> hft.BulkOrder
	0,  // 3: hft.BulkOrder.side:type_name -> hft.Side
	0,  // 4: hft.MarketOrderRequest.side:type_name -> hft.Side
	0,  // 5: hft.CancelOrdersRequest.side:type_name -> hft.Side
	0,  // 6: hft.TradesRequest.side:type_name -> hft.Side
	42, // 7: hft.TradesRequest.from:type_name -> google.protobuf.Timestamp
	42, // 8: hft.TradesRequest.to:type_name -> google.protobuf.Timestamp
	23, // 9: hft.BalancesResponse.payload:type_name -> hft.Balance
	43, // 10: hft.BalancesResponse.error:type_name -> hft.common.Error
	39, // 11: hft.LimitOrderResponse.payload:type_name -> hft.LimitOrderResponse.LimitOrderPayload
	43, // 12: hft.LimitOrderResponse.error:type_name -> hft.common.Error
	40, // 13: hft.BulkLimitOrderResponse.payload:type_name -> hft.BulkLimitOrderResponse.BulkLimitOrderPayload
	43, // 14: hft.BulkLimitOrderResponse.error:type_name -> hft.common.Error
	44, // 15: hft.BulkOrderItemStatus.error:type_name -> hft.common.ErrorCode
	41, // 16: hft.MarketOrderResponse.payload:type_name -> hft.MarketOrderResponse.MarketOrderPayload
	43, // 17: hft.MarketOrderResponse.error:type_name -> hft.common.Error
	24, // 18: hft.OrderResponse.payload:type_name -> hft.Order
	43, // 19: hft.OrderResponse.error:type_name -> hft.common.Error
	24, // 20: hft.OrdersResponse.payload:type_name -> hft.Order
	43, // 21: hft.OrdersResponse.error:type_name -> hft.common.Error
	43, // 22: hft.CancelOrderResponse.error:type_name -> hft.common.Error
	25, // 23: hft.TradesResponse.payload:type_name -> hft.Trade
	43, // 24: hft.TradesResponse.error:type_name -> hft.common.Error
	42, // 25: hft.Balance.timestamp:type_name -> google.protobuf.Timestamp
	42, // 26: hft.Order.timestamp:type_name -> google.protobuf.Timestamp
	42, // 27: hft.Order.lastTradeTimestamp:type_name -> google.protobuf.Timestamp
	0,  // 28: hft.Order.side:type_name -> hft.Side
	42, // 29: hft.Trade.timestamp:type_name -> google.protobuf.Timestamp
	26, // 30: hft.Trade.fee:type_name -> hft.TradeFee
	0,  // 31: hft.Trade.side:type_name -> hft.Side
	23, // 32: hft.BalanceUpdate.balances:type_name -> hft.Balance
	24, // 33: hft.OrderUpdate.orders:type_name -> hft.Order
	25, // 34: hft.TradeUpdate.trades:type_name -> hft.Trade
	31, // 35: hft.GetOperationsHistoryResponse.operations:type_name -> hft.OperationHistory
	42, // 36: hft.OperationHistory.timestamp:type_name -> google.protobuf.Timestamp
	45, // 37: hft.OperationHistory.blockchainHash:type_name -> google.protobuf.StringValue
	43, // 38: hft.CreateDepositAddressesResponse.error:type_name -> hft.common.Error
	36, // 39: hft.GetDepositAddressResponse.payload:type_name -> hft.DepositAddress
	43, // 40: hft.GetDepositAddressResponse.error:type_name -> hft.common.Error
	36, // 41: hft.GetDepositAddressesResponse.payload:type_name -> hft.DepositAddress
	43, // 42: hft.GetDepositAddressesResponse.error:type_name -> hft.common.Error
	45, // 43: hft.DepositAddress.address:type_name -> google.protobuf.StringValue
	45, // 44: hft.DepositAddress.baseAddress:type_name -> google.protobuf.StringValue
	45, // 45: hft.DepositAddress.addressExtension:type_name -> google.protobuf.StringValue
	45, // 46: hft.CreateWithdrawalRequest.destinationAddressExtension:type_name -> google.protobuf.StringValue
	43, // 47: hft.CreateWithdrawalResponse.error:type_name -> hft.common.Error
	17, // 48: hft.BulkLimitOrderResponse.BulkLimitOrderPayload.statuses:type_name -> hft.BulkOrderItemStatus
	46, // 49: hft.PrivateService.GetBalances:input_type -> google.protobuf.Empty
	3,  // 50: hft.PrivateService.PlaceLimitOrder:input_type -> hft.LimitOrderRequest
	4,  // 51: hft.PrivateService.PlaceBulkLimitOrder:input_type -> hft.BulkLimitOrderRequest
	6,  // 52: hft.PrivateService.PlaceMarketOrder:input_type -> hft.MarketOrderRequest
	7,  // 53: hft.PrivateService.GetOrder:input_type -> hft.OrderRequest
	8,  // 54: hft.PrivateService.GetActiveOrders:input_type -> hft.OrdersRequest
	8,  // 55: hft.PrivateService.GetClosedOrders:input_type -> hft.OrdersRequest
	9,  // 56: hft.PrivateService.CancelAllOrders:input_type -> hft.CancelOrdersRequest
	10, // 57: hft.PrivateService.CancelOrder:input_type -> hft.CancelOrderRequest
	11, // 58: hft.PrivateService.GetTrades:input_type -> hft.TradesRequest
	13, // 59: hft.PrivateService.GetOrderTrades:input_type -> hft.OrderTradesRequest
	46, // 60: hft.PrivateService.GetBalanceUpdates:input_type -> google.protobuf.Empty
	46, // 61: hft.PrivateService.GetTradeUpdates:input_type -> google.protobuf.Empty
	12, // 62: hft.PrivateService.GetOperationsHistory:input_type -> hft.GetOperationsHistoryRequest
	46, // 63: hft.PrivateService.CreateDepositAddresses:input_type -> google.protobuf.Empty
	33, // 64: hft.PrivateService.GetDepositAddress:input_type -> hft.GetDepositAddressRequest
	46, // 65: hft.PrivateService.GetDepositAddresses:input_type -> google.protobuf.Empty
	37, // 66: hft.PrivateService.CreateWithdrawal:input_type -> hft.CreateWithdrawalRequest
	14, // 67: hft.PrivateService.GetBalances:output_type -> hft.BalancesResponse
	15, // 68: hft.PrivateService.PlaceLimitOrder:output_type -> hft.LimitOrderResponse
	16, // 69: hft.PrivateService.PlaceBulkLimitOrder:output_type -> hft.BulkLimitOrderResponse
	18, // 70: hft.PrivateService.PlaceMarketOrder:output_type -> hft.MarketOrderResponse
	19, // 71: hft.PrivateService.GetOrder:output_type -> hft.OrderResponse
	20, // 72: hft.PrivateService.GetActiveOrders:output_type -> hft.OrdersResponse
	20, // 73: hft.PrivateService.GetClosedOrders:output_type -> hft.OrdersResponse
	21, // 74: hft.PrivateService.CancelAllOrders:output_type -> hft.CancelOrderResponse
	21, // 75: hft.PrivateService.CancelOrder:output_type -> hft.CancelOrderResponse
	22, // 76: hft.PrivateService.GetTrades:output_type -> hft.TradesResponse
	22, // 77: hft.PrivateService.GetOrderTrades:output_type -> hft.TradesResponse
	27, // 78: hft.PrivateService.GetBalanceUpdates:output_type -> hft.BalanceUpdate
	29, // 79: hft.PrivateService.GetTradeUpdates:output_type -> hft.TradeUpdate
	30, // 80: hft.PrivateService.GetOperationsHistory:output_type -> hft.GetOperationsHistoryResponse
	32, // 81: hft.PrivateService.CreateDepositAddresses:output_type -> hft.CreateDepositAddressesResponse
	34, // 82: hft.PrivateService.GetDepositAddress:output_type -> hft.GetDepositAddressResponse
	35, // 83: hft.PrivateService.GetDepositAddresses:output_type -> hft.GetDepositAddressesResponse
	38, // 84: hft.PrivateService.CreateWithdrawal:output_type -> hft.CreateWithdrawalResponse
	67, // [67:85] is the sub-list for method output_type
	49, // [49:67] is the sub-list for method input_type
	49, // [49:49] is the sub-list for extension type_name
	49, // [49:49] is the sub-list for extension extendee
	0,  // [0:49] is the sub-list for field type_name
}

func init() { file_privateService_proto_init() }
func file_privateService_proto_init() {
	if File_privateService_proto != nil {
		return
	}
	file_common_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_privateService_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LimitOrderRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_privateService_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BulkLimitOrderRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_privateService_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BulkOrder); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_privateService_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MarketOrderRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_privateService_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_privateService_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrdersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_privateService_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CancelOrdersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_privateService_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CancelOrderRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_privateService_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TradesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_privateService_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOperationsHistoryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_privateService_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderTradesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_privateService_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BalancesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_privateService_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LimitOrderResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_privateService_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BulkLimitOrderResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_privateService_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BulkOrderItemStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_privateService_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MarketOrderResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_privateService_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_privateService_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrdersResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_privateService_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CancelOrderResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_privateService_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TradesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_privateService_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Balance); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_privateService_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Order); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_privateService_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Trade); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_privateService_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TradeFee); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_privateService_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BalanceUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_privateService_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_privateService_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TradeUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_privateService_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOperationsHistoryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_privateService_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OperationHistory); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_privateService_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateDepositAddressesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_privateService_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDepositAddressRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_privateService_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDepositAddressResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_privateService_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDepositAddressesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_privateService_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DepositAddress); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_privateService_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateWithdrawalRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_privateService_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateWithdrawalResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_privateService_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LimitOrderResponse_LimitOrderPayload); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_privateService_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BulkLimitOrderResponse_BulkLimitOrderPayload); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_privateService_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MarketOrderResponse_MarketOrderPayload); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_privateService_proto_msgTypes[1].OneofWrappers = []interface{}{
		(*BulkLimitOrderRequest_CancelMode)(nil),
	}
	file_privateService_proto_msgTypes[8].OneofWrappers = []interface{}{
		(*TradesRequest_Side)(nil),
		(*TradesRequest_From)(nil),
		(*TradesRequest_To)(nil),
	}
	file_privateService_proto_msgTypes[21].OneofWrappers = []interface{}{
		(*Order_LastTradeTimestamp)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_privateService_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   39,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_privateService_proto_goTypes,
		DependencyIndexes: file_privateService_proto_depIdxs,
		EnumInfos:         file_privateService_proto_enumTypes,
		MessageInfos:      file_privateService_proto_msgTypes,
	}.Build()
	File_privateService_proto = out.File
	file_privateService_proto_rawDesc = nil
	file_privateService_proto_goTypes = nil
	file_privateService_proto_depIdxs = nil
}
