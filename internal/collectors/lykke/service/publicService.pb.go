// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.17.3
// source: publicService.proto

package service

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type AssetPairRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AssetPairId string `protobuf:"bytes,1,opt,name=assetPairId,proto3" json:"assetPairId,omitempty"`
}

func (x *AssetPairRequest) Reset() {
	*x = AssetPairRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_publicService_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AssetPairRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssetPairRequest) ProtoMessage() {}

func (x *AssetPairRequest) ProtoReflect() protoreflect.Message {
	mi := &file_publicService_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssetPairRequest.ProtoReflect.Descriptor instead.
func (*AssetPairRequest) Descriptor() ([]byte, []int) {
	return file_publicService_proto_rawDescGZIP(), []int{0}
}

func (x *AssetPairRequest) GetAssetPairId() string {
	if x != nil {
		return x.AssetPairId
	}
	return ""
}

type AssetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AssetId string `protobuf:"bytes,1,opt,name=assetId,proto3" json:"assetId,omitempty"`
}

func (x *AssetRequest) Reset() {
	*x = AssetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_publicService_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AssetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssetRequest) ProtoMessage() {}

func (x *AssetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_publicService_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssetRequest.ProtoReflect.Descriptor instead.
func (*AssetRequest) Descriptor() ([]byte, []int) {
	return file_publicService_proto_rawDescGZIP(), []int{1}
}

func (x *AssetRequest) GetAssetId() string {
	if x != nil {
		return x.AssetId
	}
	return ""
}

type OrderbookRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AssetPairId string `protobuf:"bytes,1,opt,name=assetPairId,proto3" json:"assetPairId,omitempty"`
	Depth       int32  `protobuf:"varint,2,opt,name=depth,proto3" json:"depth,omitempty"`
}

func (x *OrderbookRequest) Reset() {
	*x = OrderbookRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_publicService_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderbookRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderbookRequest) ProtoMessage() {}

func (x *OrderbookRequest) ProtoReflect() protoreflect.Message {
	mi := &file_publicService_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderbookRequest.ProtoReflect.Descriptor instead.
func (*OrderbookRequest) Descriptor() ([]byte, []int) {
	return file_publicService_proto_rawDescGZIP(), []int{2}
}

func (x *OrderbookRequest) GetAssetPairId() string {
	if x != nil {
		return x.AssetPairId
	}
	return ""
}

func (x *OrderbookRequest) GetDepth() int32 {
	if x != nil {
		return x.Depth
	}
	return 0
}

type TickersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AssetPairIds []string `protobuf:"bytes,1,rep,name=assetPairIds,proto3" json:"assetPairIds,omitempty"`
}

func (x *TickersRequest) Reset() {
	*x = TickersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_publicService_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TickersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TickersRequest) ProtoMessage() {}

func (x *TickersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_publicService_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TickersRequest.ProtoReflect.Descriptor instead.
func (*TickersRequest) Descriptor() ([]byte, []int) {
	return file_publicService_proto_rawDescGZIP(), []int{3}
}

func (x *TickersRequest) GetAssetPairIds() []string {
	if x != nil {
		return x.AssetPairIds
	}
	return nil
}

type PricesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AssetPairIds []string `protobuf:"bytes,1,rep,name=assetPairIds,proto3" json:"assetPairIds,omitempty"`
}

func (x *PricesRequest) Reset() {
	*x = PricesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_publicService_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PricesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PricesRequest) ProtoMessage() {}

func (x *PricesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_publicService_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PricesRequest.ProtoReflect.Descriptor instead.
func (*PricesRequest) Descriptor() ([]byte, []int) {
	return file_publicService_proto_rawDescGZIP(), []int{4}
}

func (x *PricesRequest) GetAssetPairIds() []string {
	if x != nil {
		return x.AssetPairIds
	}
	return nil
}

type PublicTradesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AssetPairId string `protobuf:"bytes,1,opt,name=assetPairId,proto3" json:"assetPairId,omitempty"`
	Offset      int32  `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
	Take        int32  `protobuf:"varint,3,opt,name=take,proto3" json:"take,omitempty"`
}

func (x *PublicTradesRequest) Reset() {
	*x = PublicTradesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_publicService_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PublicTradesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublicTradesRequest) ProtoMessage() {}

func (x *PublicTradesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_publicService_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublicTradesRequest.ProtoReflect.Descriptor instead.
func (*PublicTradesRequest) Descriptor() ([]byte, []int) {
	return file_publicService_proto_rawDescGZIP(), []int{5}
}

func (x *PublicTradesRequest) GetAssetPairId() string {
	if x != nil {
		return x.AssetPairId
	}
	return ""
}

func (x *PublicTradesRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *PublicTradesRequest) GetTake() int32 {
	if x != nil {
		return x.Take
	}
	return 0
}

type PriceUpdatesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AssetPairIds []string `protobuf:"bytes,1,rep,name=assetPairIds,proto3" json:"assetPairIds,omitempty"`
}

func (x *PriceUpdatesRequest) Reset() {
	*x = PriceUpdatesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_publicService_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PriceUpdatesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PriceUpdatesRequest) ProtoMessage() {}

func (x *PriceUpdatesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_publicService_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PriceUpdatesRequest.ProtoReflect.Descriptor instead.
func (*PriceUpdatesRequest) Descriptor() ([]byte, []int) {
	return file_publicService_proto_rawDescGZIP(), []int{6}
}

func (x *PriceUpdatesRequest) GetAssetPairIds() []string {
	if x != nil {
		return x.AssetPairIds
	}
	return nil
}

type OrderbookUpdatesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AssetPairId  string   `protobuf:"bytes,1,opt,name=assetPairId,proto3" json:"assetPairId,omitempty"`
	AssetPairIds []string `protobuf:"bytes,2,rep,name=assetPairIds,proto3" json:"assetPairIds,omitempty"`
}

func (x *OrderbookUpdatesRequest) Reset() {
	*x = OrderbookUpdatesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_publicService_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderbookUpdatesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderbookUpdatesRequest) ProtoMessage() {}

func (x *OrderbookUpdatesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_publicService_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderbookUpdatesRequest.ProtoReflect.Descriptor instead.
func (*OrderbookUpdatesRequest) Descriptor() ([]byte, []int) {
	return file_publicService_proto_rawDescGZIP(), []int{7}
}

func (x *OrderbookUpdatesRequest) GetAssetPairId() string {
	if x != nil {
		return x.AssetPairId
	}
	return ""
}

func (x *OrderbookUpdatesRequest) GetAssetPairIds() []string {
	if x != nil {
		return x.AssetPairIds
	}
	return nil
}

type PublicTradesUpdatesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AssetPairId string `protobuf:"bytes,1,opt,name=assetPairId,proto3" json:"assetPairId,omitempty"`
}

func (x *PublicTradesUpdatesRequest) Reset() {
	*x = PublicTradesUpdatesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_publicService_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PublicTradesUpdatesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublicTradesUpdatesRequest) ProtoMessage() {}

func (x *PublicTradesUpdatesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_publicService_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublicTradesUpdatesRequest.ProtoReflect.Descriptor instead.
func (*PublicTradesUpdatesRequest) Descriptor() ([]byte, []int) {
	return file_publicService_proto_rawDescGZIP(), []int{8}
}

func (x *PublicTradesUpdatesRequest) GetAssetPairId() string {
	if x != nil {
		return x.AssetPairId
	}
	return ""
}

type AssetPairResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Payload *AssetPair `protobuf:"bytes,1,opt,name=payload,proto3" json:"payload,omitempty"`
	Error   *Error     `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *AssetPairResponse) Reset() {
	*x = AssetPairResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_publicService_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AssetPairResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssetPairResponse) ProtoMessage() {}

func (x *AssetPairResponse) ProtoReflect() protoreflect.Message {
	mi := &file_publicService_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssetPairResponse.ProtoReflect.Descriptor instead.
func (*AssetPairResponse) Descriptor() ([]byte, []int) {
	return file_publicService_proto_rawDescGZIP(), []int{9}
}

func (x *AssetPairResponse) GetPayload() *AssetPair {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *AssetPairResponse) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

type AssetPairsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Payload []*AssetPair `protobuf:"bytes,1,rep,name=payload,proto3" json:"payload,omitempty"`
	Error   *Error       `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *AssetPairsResponse) Reset() {
	*x = AssetPairsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_publicService_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AssetPairsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssetPairsResponse) ProtoMessage() {}

func (x *AssetPairsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_publicService_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssetPairsResponse.ProtoReflect.Descriptor instead.
func (*AssetPairsResponse) Descriptor() ([]byte, []int) {
	return file_publicService_proto_rawDescGZIP(), []int{10}
}

func (x *AssetPairsResponse) GetPayload() []*AssetPair {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *AssetPairsResponse) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

type AssetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Payload *Asset `protobuf:"bytes,1,opt,name=payload,proto3" json:"payload,omitempty"`
	Error   *Error `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *AssetResponse) Reset() {
	*x = AssetResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_publicService_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AssetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssetResponse) ProtoMessage() {}

func (x *AssetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_publicService_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssetResponse.ProtoReflect.Descriptor instead.
func (*AssetResponse) Descriptor() ([]byte, []int) {
	return file_publicService_proto_rawDescGZIP(), []int{11}
}

func (x *AssetResponse) GetPayload() *Asset {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *AssetResponse) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

type AssetsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Payload []*Asset `protobuf:"bytes,1,rep,name=payload,proto3" json:"payload,omitempty"`
	Error   *Error   `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *AssetsResponse) Reset() {
	*x = AssetsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_publicService_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AssetsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssetsResponse) ProtoMessage() {}

func (x *AssetsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_publicService_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssetsResponse.ProtoReflect.Descriptor instead.
func (*AssetsResponse) Descriptor() ([]byte, []int) {
	return file_publicService_proto_rawDescGZIP(), []int{12}
}

func (x *AssetsResponse) GetPayload() []*Asset {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *AssetsResponse) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

type OrderbookResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Payload []*Orderbook `protobuf:"bytes,1,rep,name=payload,proto3" json:"payload,omitempty"`
	Error   *Error       `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *OrderbookResponse) Reset() {
	*x = OrderbookResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_publicService_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderbookResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderbookResponse) ProtoMessage() {}

func (x *OrderbookResponse) ProtoReflect() protoreflect.Message {
	mi := &file_publicService_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderbookResponse.ProtoReflect.Descriptor instead.
func (*OrderbookResponse) Descriptor() ([]byte, []int) {
	return file_publicService_proto_rawDescGZIP(), []int{13}
}

func (x *OrderbookResponse) GetPayload() []*Orderbook {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *OrderbookResponse) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

type TickersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Payload []*TickerUpdate `protobuf:"bytes,1,rep,name=payload,proto3" json:"payload,omitempty"`
	Error   *Error          `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *TickersResponse) Reset() {
	*x = TickersResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_publicService_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TickersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TickersResponse) ProtoMessage() {}

func (x *TickersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_publicService_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TickersResponse.ProtoReflect.Descriptor instead.
func (*TickersResponse) Descriptor() ([]byte, []int) {
	return file_publicService_proto_rawDescGZIP(), []int{14}
}

func (x *TickersResponse) GetPayload() []*TickerUpdate {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *TickersResponse) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

type PricesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Payload []*PriceUpdate `protobuf:"bytes,1,rep,name=payload,proto3" json:"payload,omitempty"`
	Error   *Error         `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *PricesResponse) Reset() {
	*x = PricesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_publicService_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PricesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PricesResponse) ProtoMessage() {}

func (x *PricesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_publicService_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PricesResponse.ProtoReflect.Descriptor instead.
func (*PricesResponse) Descriptor() ([]byte, []int) {
	return file_publicService_proto_rawDescGZIP(), []int{15}
}

func (x *PricesResponse) GetPayload() []*PriceUpdate {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *PricesResponse) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

type AssetPair struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AssetPairId        string `protobuf:"bytes,1,opt,name=assetPairId,proto3" json:"assetPairId,omitempty"`
	BaseAssetId        string `protobuf:"bytes,2,opt,name=baseAssetId,proto3" json:"baseAssetId,omitempty"`
	QuoteAssetId       string `protobuf:"bytes,3,opt,name=quoteAssetId,proto3" json:"quoteAssetId,omitempty"`
	Name               string `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	PriceAccuracy      int32  `protobuf:"varint,5,opt,name=priceAccuracy,proto3" json:"priceAccuracy,omitempty"`
	BaseAssetAccuracy  int32  `protobuf:"varint,6,opt,name=baseAssetAccuracy,proto3" json:"baseAssetAccuracy,omitempty"`
	QuoteAssetAccuracy int32  `protobuf:"varint,7,opt,name=quoteAssetAccuracy,proto3" json:"quoteAssetAccuracy,omitempty"`
	MinVolume          string `protobuf:"bytes,8,opt,name=minVolume,proto3" json:"minVolume,omitempty"`
	MinOppositeVolume  string `protobuf:"bytes,9,opt,name=minOppositeVolume,proto3" json:"minOppositeVolume,omitempty"`
}

func (x *AssetPair) Reset() {
	*x = AssetPair{}
	if protoimpl.UnsafeEnabled {
		mi := &file_publicService_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AssetPair) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssetPair) ProtoMessage() {}

func (x *AssetPair) ProtoReflect() protoreflect.Message {
	mi := &file_publicService_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssetPair.ProtoReflect.Descriptor instead.
func (*AssetPair) Descriptor() ([]byte, []int) {
	return file_publicService_proto_rawDescGZIP(), []int{16}
}

func (x *AssetPair) GetAssetPairId() string {
	if x != nil {
		return x.AssetPairId
	}
	return ""
}

func (x *AssetPair) GetBaseAssetId() string {
	if x != nil {
		return x.BaseAssetId
	}
	return ""
}

func (x *AssetPair) GetQuoteAssetId() string {
	if x != nil {
		return x.QuoteAssetId
	}
	return ""
}

func (x *AssetPair) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AssetPair) GetPriceAccuracy() int32 {
	if x != nil {
		return x.PriceAccuracy
	}
	return 0
}

func (x *AssetPair) GetBaseAssetAccuracy() int32 {
	if x != nil {
		return x.BaseAssetAccuracy
	}
	return 0
}

func (x *AssetPair) GetQuoteAssetAccuracy() int32 {
	if x != nil {
		return x.QuoteAssetAccuracy
	}
	return 0
}

func (x *AssetPair) GetMinVolume() string {
	if x != nil {
		return x.MinVolume
	}
	return ""
}

func (x *AssetPair) GetMinOppositeVolume() string {
	if x != nil {
		return x.MinOppositeVolume
	}
	return ""
}

type Asset struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AssetId  string `protobuf:"bytes,1,opt,name=assetId,proto3" json:"assetId,omitempty"`
	Name     string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Symbol   string `protobuf:"bytes,3,opt,name=symbol,proto3" json:"symbol,omitempty"`
	Accuracy int32  `protobuf:"varint,4,opt,name=accuracy,proto3" json:"accuracy,omitempty"`
}

func (x *Asset) Reset() {
	*x = Asset{}
	if protoimpl.UnsafeEnabled {
		mi := &file_publicService_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Asset) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Asset) ProtoMessage() {}

func (x *Asset) ProtoReflect() protoreflect.Message {
	mi := &file_publicService_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Asset.ProtoReflect.Descriptor instead.
func (*Asset) Descriptor() ([]byte, []int) {
	return file_publicService_proto_rawDescGZIP(), []int{17}
}

func (x *Asset) GetAssetId() string {
	if x != nil {
		return x.AssetId
	}
	return ""
}

func (x *Asset) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Asset) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *Asset) GetAccuracy() int32 {
	if x != nil {
		return x.Accuracy
	}
	return 0
}

type Orderbook struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AssetPairId string                   `protobuf:"bytes,1,opt,name=assetPairId,proto3" json:"assetPairId,omitempty"`
	Timestamp   *timestamppb.Timestamp   `protobuf:"bytes,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Bids        []*Orderbook_PriceVolume `protobuf:"bytes,3,rep,name=bids,proto3" json:"bids,omitempty"`
	Asks        []*Orderbook_PriceVolume `protobuf:"bytes,4,rep,name=asks,proto3" json:"asks,omitempty"`
}

func (x *Orderbook) Reset() {
	*x = Orderbook{}
	if protoimpl.UnsafeEnabled {
		mi := &file_publicService_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Orderbook) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Orderbook) ProtoMessage() {}

func (x *Orderbook) ProtoReflect() protoreflect.Message {
	mi := &file_publicService_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Orderbook.ProtoReflect.Descriptor instead.
func (*Orderbook) Descriptor() ([]byte, []int) {
	return file_publicService_proto_rawDescGZIP(), []int{18}
}

func (x *Orderbook) GetAssetPairId() string {
	if x != nil {
		return x.AssetPairId
	}
	return ""
}

func (x *Orderbook) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *Orderbook) GetBids() []*Orderbook_PriceVolume {
	if x != nil {
		return x.Bids
	}
	return nil
}

func (x *Orderbook) GetAsks() []*Orderbook_PriceVolume {
	if x != nil {
		return x.Asks
	}
	return nil
}

type PublicTradeUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Trades []*PublicTrade `protobuf:"bytes,1,rep,name=trades,proto3" json:"trades,omitempty"`
}

func (x *PublicTradeUpdate) Reset() {
	*x = PublicTradeUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_publicService_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PublicTradeUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublicTradeUpdate) ProtoMessage() {}

func (x *PublicTradeUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_publicService_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublicTradeUpdate.ProtoReflect.Descriptor instead.
func (*PublicTradeUpdate) Descriptor() ([]byte, []int) {
	return file_publicService_proto_rawDescGZIP(), []int{19}
}

func (x *PublicTradeUpdate) GetTrades() []*PublicTrade {
	if x != nil {
		return x.Trades
	}
	return nil
}

type PublicTrade struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	AssetPairId string                 `protobuf:"bytes,2,opt,name=assetPairId,proto3" json:"assetPairId,omitempty"`
	DateTime    *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=dateTime,proto3" json:"dateTime,omitempty"`
	Volume      string                 `protobuf:"bytes,4,opt,name=volume,proto3" json:"volume,omitempty"`
	Price       string                 `protobuf:"bytes,5,opt,name=price,proto3" json:"price,omitempty"`
	Side        string                 `protobuf:"bytes,6,opt,name=side,proto3" json:"side,omitempty"`
}

func (x *PublicTrade) Reset() {
	*x = PublicTrade{}
	if protoimpl.UnsafeEnabled {
		mi := &file_publicService_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PublicTrade) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublicTrade) ProtoMessage() {}

func (x *PublicTrade) ProtoReflect() protoreflect.Message {
	mi := &file_publicService_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublicTrade.ProtoReflect.Descriptor instead.
func (*PublicTrade) Descriptor() ([]byte, []int) {
	return file_publicService_proto_rawDescGZIP(), []int{20}
}

func (x *PublicTrade) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *PublicTrade) GetAssetPairId() string {
	if x != nil {
		return x.AssetPairId
	}
	return ""
}

func (x *PublicTrade) GetDateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.DateTime
	}
	return nil
}

func (x *PublicTrade) GetVolume() string {
	if x != nil {
		return x.Volume
	}
	return ""
}

func (x *PublicTrade) GetPrice() string {
	if x != nil {
		return x.Price
	}
	return ""
}

func (x *PublicTrade) GetSide() string {
	if x != nil {
		return x.Side
	}
	return ""
}

type PriceUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AssetPairId string                 `protobuf:"bytes,1,opt,name=assetPairId,proto3" json:"assetPairId,omitempty"`
	Bid         string                 `protobuf:"bytes,2,opt,name=bid,proto3" json:"bid,omitempty"`
	Ask         string                 `protobuf:"bytes,3,opt,name=ask,proto3" json:"ask,omitempty"`
	Timestamp   *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
}

func (x *PriceUpdate) Reset() {
	*x = PriceUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_publicService_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PriceUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PriceUpdate) ProtoMessage() {}

func (x *PriceUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_publicService_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PriceUpdate.ProtoReflect.Descriptor instead.
func (*PriceUpdate) Descriptor() ([]byte, []int) {
	return file_publicService_proto_rawDescGZIP(), []int{21}
}

func (x *PriceUpdate) GetAssetPairId() string {
	if x != nil {
		return x.AssetPairId
	}
	return ""
}

func (x *PriceUpdate) GetBid() string {
	if x != nil {
		return x.Bid
	}
	return ""
}

func (x *PriceUpdate) GetAsk() string {
	if x != nil {
		return x.Ask
	}
	return ""
}

func (x *PriceUpdate) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

type TickerUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AssetPairId string                 `protobuf:"bytes,1,opt,name=assetPairId,proto3" json:"assetPairId,omitempty"`
	VolumeBase  string                 `protobuf:"bytes,2,opt,name=volumeBase,proto3" json:"volumeBase,omitempty"`
	VolumeQuote string                 `protobuf:"bytes,3,opt,name=volumeQuote,proto3" json:"volumeQuote,omitempty"`
	PriceChange string                 `protobuf:"bytes,4,opt,name=priceChange,proto3" json:"priceChange,omitempty"`
	LastPrice   string                 `protobuf:"bytes,5,opt,name=lastPrice,proto3" json:"lastPrice,omitempty"`
	High        string                 `protobuf:"bytes,6,opt,name=high,proto3" json:"high,omitempty"`
	Low         string                 `protobuf:"bytes,7,opt,name=low,proto3" json:"low,omitempty"`
	Timestamp   *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
}

func (x *TickerUpdate) Reset() {
	*x = TickerUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_publicService_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TickerUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TickerUpdate) ProtoMessage() {}

func (x *TickerUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_publicService_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TickerUpdate.ProtoReflect.Descriptor instead.
func (*TickerUpdate) Descriptor() ([]byte, []int) {
	return file_publicService_proto_rawDescGZIP(), []int{22}
}

func (x *TickerUpdate) GetAssetPairId() string {
	if x != nil {
		return x.AssetPairId
	}
	return ""
}

func (x *TickerUpdate) GetVolumeBase() string {
	if x != nil {
		return x.VolumeBase
	}
	return ""
}

func (x *TickerUpdate) GetVolumeQuote() string {
	if x != nil {
		return x.VolumeQuote
	}
	return ""
}

func (x *TickerUpdate) GetPriceChange() string {
	if x != nil {
		return x.PriceChange
	}
	return ""
}

func (x *TickerUpdate) GetLastPrice() string {
	if x != nil {
		return x.LastPrice
	}
	return ""
}

func (x *TickerUpdate) GetHigh() string {
	if x != nil {
		return x.High
	}
	return ""
}

func (x *TickerUpdate) GetLow() string {
	if x != nil {
		return x.Low
	}
	return ""
}

func (x *TickerUpdate) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

type Orderbook_PriceVolume struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	P string `protobuf:"bytes,1,opt,name=p,proto3" json:"p,omitempty"`
	V string `protobuf:"bytes,2,opt,name=v,proto3" json:"v,omitempty"`
}

func (x *Orderbook_PriceVolume) Reset() {
	*x = Orderbook_PriceVolume{}
	if protoimpl.UnsafeEnabled {
		mi := &file_publicService_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Orderbook_PriceVolume) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Orderbook_PriceVolume) ProtoMessage() {}

func (x *Orderbook_PriceVolume) ProtoReflect() protoreflect.Message {
	mi := &file_publicService_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Orderbook_PriceVolume.ProtoReflect.Descriptor instead.
func (*Orderbook_PriceVolume) Descriptor() ([]byte, []int) {
	return file_publicService_proto_rawDescGZIP(), []int{18, 0}
}

func (x *Orderbook_PriceVolume) GetP() string {
	if x != nil {
		return x.P
	}
	return ""
}

func (x *Orderbook_PriceVolume) GetV() string {
	if x != nil {
		return x.V
	}
	return ""
}

var File_publicService_proto protoreflect.FileDescriptor

var file_publicService_proto_rawDesc = []byte{
	0x0a, 0x13, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x03, 0x68, 0x66, 0x74, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74,
	0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0c, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x34, 0x0a, 0x10, 0x41, 0x73, 0x73, 0x65, 0x74, 0x50,
	0x61, 0x69, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x61, 0x73,
	0x73, 0x65, 0x74, 0x50, 0x61, 0x69, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x61, 0x73, 0x73, 0x65, 0x74, 0x50, 0x61, 0x69, 0x72, 0x49, 0x64, 0x22, 0x28, 0x0a, 0x0c,
	0x41, 0x73, 0x73, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07,
	0x61, 0x73, 0x73, 0x65, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61,
	0x73, 0x73, 0x65, 0x74, 0x49, 0x64, 0x22, 0x4a, 0x0a, 0x10, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x62,
	0x6f, 0x6f, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x61, 0x73,
	0x73, 0x65, 0x74, 0x50, 0x61, 0x69, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x61, 0x73, 0x73, 0x65, 0x74, 0x50, 0x61, 0x69, 0x72, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05,
	0x64, 0x65, 0x70, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x64, 0x65, 0x70,
	0x74, 0x68, 0x22, 0x34, 0x0a, 0x0e, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x61, 0x73, 0x73, 0x65, 0x74, 0x50, 0x61, 0x69,
	0x72, 0x49, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x73, 0x73, 0x65,
	0x74, 0x50, 0x61, 0x69, 0x72, 0x49, 0x64, 0x73, 0x22, 0x33, 0x0a, 0x0d, 0x50, 0x72, 0x69, 0x63,
	0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x61, 0x73, 0x73,
	0x65, 0x74, 0x50, 0x61, 0x69, 0x72, 0x49, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x0c, 0x61, 0x73, 0x73, 0x65, 0x74, 0x50, 0x61, 0x69, 0x72, 0x49, 0x64, 0x73, 0x22, 0x63, 0x0a,
	0x13, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x54, 0x72, 0x61, 0x64, 0x65, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x61, 0x73, 0x73, 0x65, 0x74, 0x50, 0x61, 0x69,
	0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x73, 0x73, 0x65, 0x74,
	0x50, 0x61, 0x69, 0x72, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x12,
	0x0a, 0x04, 0x74, 0x61, 0x6b, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74, 0x61,
	0x6b, 0x65, 0x22, 0x39, 0x0a, 0x13, 0x50, 0x72, 0x69, 0x63, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x61, 0x73, 0x73,
	0x65, 0x74, 0x50, 0x61, 0x69, 0x72, 0x49, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x0c, 0x61, 0x73, 0x73, 0x65, 0x74, 0x50, 0x61, 0x69, 0x72, 0x49, 0x64, 0x73, 0x22, 0x5f, 0x0a,
	0x17, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x62, 0x6f, 0x6f, 0x6b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x61, 0x73, 0x73, 0x65,
	0x74, 0x50, 0x61, 0x69, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61,
	0x73, 0x73, 0x65, 0x74, 0x50, 0x61, 0x69, 0x72, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x61, 0x73,
	0x73, 0x65, 0x74, 0x50, 0x61, 0x69, 0x72, 0x49, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x0c, 0x61, 0x73, 0x73, 0x65, 0x74, 0x50, 0x61, 0x69, 0x72, 0x49, 0x64, 0x73, 0x22, 0x3e,
	0x0a, 0x1a, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x54, 0x72, 0x61, 0x64, 0x65, 0x73, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b,
	0x61, 0x73, 0x73, 0x65, 0x74, 0x50, 0x61, 0x69, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x61, 0x73, 0x73, 0x65, 0x74, 0x50, 0x61, 0x69, 0x72, 0x49, 0x64, 0x22, 0x66,
	0x0a, 0x11, 0x41, 0x73, 0x73, 0x65, 0x74, 0x50, 0x61, 0x69, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x28, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x68, 0x66, 0x74, 0x2e, 0x41, 0x73, 0x73, 0x65, 0x74,
	0x50, 0x61, 0x69, 0x72, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x27, 0x0a,
	0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x68,
	0x66, 0x74, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52,
	0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x67, 0x0a, 0x12, 0x41, 0x73, 0x73, 0x65, 0x74, 0x50,
	0x61, 0x69, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x28, 0x0a, 0x07,
	0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e,
	0x68, 0x66, 0x74, 0x2e, 0x41, 0x73, 0x73, 0x65, 0x74, 0x50, 0x61, 0x69, 0x72, 0x52, 0x07, 0x70,
	0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x27, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x68, 0x66, 0x74, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22,
	0x5e, 0x0a, 0x0d, 0x41, 0x73, 0x73, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x24, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0a, 0x2e, 0x68, 0x66, 0x74, 0x2e, 0x41, 0x73, 0x73, 0x65, 0x74, 0x52, 0x07, 0x70,
	0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x27, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x68, 0x66, 0x74, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22,
	0x5f, 0x0a, 0x0e, 0x41, 0x73, 0x73, 0x65, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x24, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x68, 0x66, 0x74, 0x2e, 0x41, 0x73, 0x73, 0x65, 0x74, 0x52, 0x07,
	0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x27, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x68, 0x66, 0x74, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x22, 0x66, 0x0a, 0x11, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x62, 0x6f, 0x6f, 0x6b, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x28, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x68, 0x66, 0x74, 0x2e, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x62, 0x6f, 0x6f, 0x6b, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12,
	0x27, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11,
	0x2e, 0x68, 0x66, 0x74, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x67, 0x0a, 0x0f, 0x54, 0x69, 0x63, 0x6b,
	0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2b, 0x0a, 0x07, 0x70,
	0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x68,
	0x66, 0x74, 0x2e, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x72, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52,
	0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x27, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x68, 0x66, 0x74, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x22, 0x65, 0x0a, 0x0e, 0x50, 0x72, 0x69, 0x63, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x2a, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x68, 0x66, 0x74, 0x2e, 0x50, 0x72, 0x69, 0x63, 0x65,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12,
	0x27, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11,
	0x2e, 0x68, 0x66, 0x74, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0xd7, 0x02, 0x0a, 0x09, 0x41, 0x73, 0x73,
	0x65, 0x74, 0x50, 0x61, 0x69, 0x72, 0x12, 0x20, 0x0a, 0x0b, 0x61, 0x73, 0x73, 0x65, 0x74, 0x50,
	0x61, 0x69, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x73, 0x73,
	0x65, 0x74, 0x50, 0x61, 0x69, 0x72, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x62, 0x61, 0x73, 0x65,
	0x41, 0x73, 0x73, 0x65, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x62,
	0x61, 0x73, 0x65, 0x41, 0x73, 0x73, 0x65, 0x74, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x71, 0x75,
	0x6f, 0x74, 0x65, 0x41, 0x73, 0x73, 0x65, 0x74, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x71, 0x75, 0x6f, 0x74, 0x65, 0x41, 0x73, 0x73, 0x65, 0x74, 0x49, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x70, 0x72, 0x69, 0x63, 0x65, 0x41, 0x63, 0x63, 0x75, 0x72,
	0x61, 0x63, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x70, 0x72, 0x69, 0x63, 0x65,
	0x41, 0x63, 0x63, 0x75, 0x72, 0x61, 0x63, 0x79, 0x12, 0x2c, 0x0a, 0x11, 0x62, 0x61, 0x73, 0x65,
	0x41, 0x73, 0x73, 0x65, 0x74, 0x41, 0x63, 0x63, 0x75, 0x72, 0x61, 0x63, 0x79, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x11, 0x62, 0x61, 0x73, 0x65, 0x41, 0x73, 0x73, 0x65, 0x74, 0x41, 0x63,
	0x63, 0x75, 0x72, 0x61, 0x63, 0x79, 0x12, 0x2e, 0x0a, 0x12, 0x71, 0x75, 0x6f, 0x74, 0x65, 0x41,
	0x73, 0x73, 0x65, 0x74, 0x41, 0x63, 0x63, 0x75, 0x72, 0x61, 0x63, 0x79, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x12, 0x71, 0x75, 0x6f, 0x74, 0x65, 0x41, 0x73, 0x73, 0x65, 0x74, 0x41, 0x63,
	0x63, 0x75, 0x72, 0x61, 0x63, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x6d, 0x69, 0x6e, 0x56, 0x6f, 0x6c,
	0x75, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6d, 0x69, 0x6e, 0x56, 0x6f,
	0x6c, 0x75, 0x6d, 0x65, 0x12, 0x2c, 0x0a, 0x11, 0x6d, 0x69, 0x6e, 0x4f, 0x70, 0x70, 0x6f, 0x73,
	0x69, 0x74, 0x65, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x11, 0x6d, 0x69, 0x6e, 0x4f, 0x70, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x65, 0x56, 0x6f, 0x6c, 0x75,
	0x6d, 0x65, 0x22, 0x69, 0x0a, 0x05, 0x41, 0x73, 0x73, 0x65, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x61,
	0x73, 0x73, 0x65, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x73,
	0x73, 0x65, 0x74, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x79, 0x6d,
	0x62, 0x6f, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f,
	0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x63, 0x63, 0x75, 0x72, 0x61, 0x63, 0x79, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x08, 0x61, 0x63, 0x63, 0x75, 0x72, 0x61, 0x63, 0x79, 0x22, 0xf2, 0x01,
	0x0a, 0x09, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x62, 0x6f, 0x6f, 0x6b, 0x12, 0x20, 0x0a, 0x0b, 0x61,
	0x73, 0x73, 0x65, 0x74, 0x50, 0x61, 0x69, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x61, 0x73, 0x73, 0x65, 0x74, 0x50, 0x61, 0x69, 0x72, 0x49, 0x64, 0x12, 0x38, 0x0a,
	0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x74, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x2e, 0x0a, 0x04, 0x62, 0x69, 0x64, 0x73, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x68, 0x66, 0x74, 0x2e, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x62, 0x6f, 0x6f, 0x6b, 0x2e, 0x50, 0x72, 0x69, 0x63, 0x65, 0x56, 0x6f, 0x6c, 0x75, 0x6d,
	0x65, 0x52, 0x04, 0x62, 0x69, 0x64, 0x73, 0x12, 0x2e, 0x0a, 0x04, 0x61, 0x73, 0x6b, 0x73, 0x18,
	0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x68, 0x66, 0x74, 0x2e, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x62, 0x6f, 0x6f, 0x6b, 0x2e, 0x50, 0x72, 0x69, 0x63, 0x65, 0x56, 0x6f, 0x6c, 0x75, 0x6d,
	0x65, 0x52, 0x04, 0x61, 0x73, 0x6b, 0x73, 0x1a, 0x29, 0x0a, 0x0b, 0x50, 0x72, 0x69, 0x63, 0x65,
	0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x12, 0x0c, 0x0a, 0x01, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x01, 0x70, 0x12, 0x0c, 0x0a, 0x01, 0x76, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x01, 0x76, 0x22, 0x3d, 0x0a, 0x11, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x54, 0x72, 0x61, 0x64,
	0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x28, 0x0a, 0x06, 0x74, 0x72, 0x61, 0x64, 0x65,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x68, 0x66, 0x74, 0x2e, 0x50, 0x75,
	0x62, 0x6c, 0x69, 0x63, 0x54, 0x72, 0x61, 0x64, 0x65, 0x52, 0x06, 0x74, 0x72, 0x61, 0x64, 0x65,
	0x73, 0x22, 0xb9, 0x01, 0x0a, 0x0b, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x54, 0x72, 0x61, 0x64,
	0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x20, 0x0a, 0x0b, 0x61, 0x73, 0x73, 0x65, 0x74, 0x50, 0x61, 0x69, 0x72, 0x49, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x73, 0x73, 0x65, 0x74, 0x50, 0x61, 0x69,
	0x72, 0x49, 0x64, 0x12, 0x36, 0x0a, 0x08, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x08, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x76,
	0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x76, 0x6f, 0x6c,
	0x75, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x64,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x69, 0x64, 0x65, 0x22, 0x8d, 0x01,
	0x0a, 0x0b, 0x50, 0x72, 0x69, 0x63, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x20, 0x0a,
	0x0b, 0x61, 0x73, 0x73, 0x65, 0x74, 0x50, 0x61, 0x69, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x61, 0x73, 0x73, 0x65, 0x74, 0x50, 0x61, 0x69, 0x72, 0x49, 0x64, 0x12,
	0x10, 0x0a, 0x03, 0x62, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x62, 0x69,
	0x64, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x73, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x61, 0x73, 0x6b, 0x12, 0x38, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x22, 0x92, 0x02,
	0x0a, 0x0c, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x72, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x20,
	0x0a, 0x0b, 0x61, 0x73, 0x73, 0x65, 0x74, 0x50, 0x61, 0x69, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x73, 0x73, 0x65, 0x74, 0x50, 0x61, 0x69, 0x72, 0x49, 0x64,
	0x12, 0x1e, 0x0a, 0x0a, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x42, 0x61, 0x73, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x42, 0x61, 0x73, 0x65,
	0x12, 0x20, 0x0a, 0x0b, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x51, 0x75, 0x6f, 0x74, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x51, 0x75, 0x6f,
	0x74, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x72, 0x69, 0x63, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x72, 0x69, 0x63, 0x65, 0x43, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6c, 0x61, 0x73, 0x74, 0x50, 0x72, 0x69, 0x63,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6c, 0x61, 0x73, 0x74, 0x50, 0x72, 0x69,
	0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x69, 0x67, 0x68, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x68, 0x69, 0x67, 0x68, 0x12, 0x10, 0x0a, 0x03, 0x6c, 0x6f, 0x77, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6c, 0x6f, 0x77, 0x12, 0x38, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x32, 0x8e, 0x06, 0x0a, 0x0d, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x12, 0x40, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x41, 0x73, 0x73, 0x65, 0x74,
	0x50, 0x61, 0x69, 0x72, 0x73, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x17, 0x2e,
	0x68, 0x66, 0x74, 0x2e, 0x41, 0x73, 0x73, 0x65, 0x74, 0x50, 0x61, 0x69, 0x72, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x41, 0x73, 0x73,
	0x65, 0x74, 0x50, 0x61, 0x69, 0x72, 0x12, 0x15, 0x2e, 0x68, 0x66, 0x74, 0x2e, 0x41, 0x73, 0x73,
	0x65, 0x74, 0x50, 0x61, 0x69, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e,
	0x68, 0x66, 0x74, 0x2e, 0x41, 0x73, 0x73, 0x65, 0x74, 0x50, 0x61, 0x69, 0x72, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x38, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x41, 0x73, 0x73, 0x65,
	0x74, 0x73, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x13, 0x2e, 0x68, 0x66, 0x74,
	0x2e, 0x41, 0x73, 0x73, 0x65, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x31, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x41, 0x73, 0x73, 0x65, 0x74, 0x12, 0x11, 0x2e, 0x68, 0x66,
	0x74, 0x2e, 0x41, 0x73, 0x73, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x12,
	0x2e, 0x68, 0x66, 0x74, 0x2e, 0x41, 0x73, 0x73, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x3e, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x62, 0x6f,
	0x6f, 0x6b, 0x73, 0x12, 0x15, 0x2e, 0x68, 0x66, 0x74, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x62,
	0x6f, 0x6f, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x68, 0x66, 0x74,
	0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x62, 0x6f, 0x6f, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x37, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x72, 0x73,
	0x12, 0x13, 0x2e, 0x68, 0x66, 0x74, 0x2e, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x72, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x68, 0x66, 0x74, 0x2e, 0x54, 0x69, 0x63, 0x6b,
	0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x34, 0x0a, 0x09, 0x47,
	0x65, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x73, 0x12, 0x12, 0x2e, 0x68, 0x66, 0x74, 0x2e, 0x50,
	0x72, 0x69, 0x63, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e, 0x68,
	0x66, 0x74, 0x2e, 0x50, 0x72, 0x69, 0x63, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x43, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x54, 0x72,
	0x61, 0x64, 0x65, 0x73, 0x12, 0x18, 0x2e, 0x68, 0x66, 0x74, 0x2e, 0x50, 0x75, 0x62, 0x6c, 0x69,
	0x63, 0x54, 0x72, 0x61, 0x64, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16,
	0x2e, 0x68, 0x66, 0x74, 0x2e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x54, 0x72, 0x61, 0x64, 0x65,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x3f, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x50, 0x72, 0x69,
	0x63, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x12, 0x18, 0x2e, 0x68, 0x66, 0x74, 0x2e,
	0x50, 0x72, 0x69, 0x63, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x10, 0x2e, 0x68, 0x66, 0x74, 0x2e, 0x50, 0x72, 0x69, 0x63, 0x65, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x30, 0x01, 0x12, 0x3f, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x54, 0x69,
	0x63, 0x6b, 0x65, 0x72, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x12, 0x16, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x1a, 0x11, 0x2e, 0x68, 0x66, 0x74, 0x2e, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x72,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x30, 0x01, 0x12, 0x45, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x62, 0x6f, 0x6f, 0x6b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x12,
	0x1c, 0x2e, 0x68, 0x66, 0x74, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x62, 0x6f, 0x6f, 0x6b, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0e, 0x2e,
	0x68, 0x66, 0x74, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x62, 0x6f, 0x6f, 0x6b, 0x30, 0x01, 0x12,
	0x52, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x54, 0x72, 0x61, 0x64,
	0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x12, 0x1f, 0x2e, 0x68, 0x66, 0x74, 0x2e, 0x50,
	0x75, 0x62, 0x6c, 0x69, 0x63, 0x54, 0x72, 0x61, 0x64, 0x65, 0x73, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x68, 0x66, 0x74, 0x2e,
	0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x54, 0x72, 0x61, 0x64, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x30, 0x01, 0x42, 0x27, 0x5a, 0x0a, 0x2e, 0x2f, 0x3b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0xaa, 0x02, 0x18, 0x4c, 0x79, 0x6b, 0x6b, 0x65, 0x2e, 0x48, 0x66, 0x74, 0x41, 0x70, 0x69,
	0x2e, 0x41, 0x70, 0x69, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_publicService_proto_rawDescOnce sync.Once
	file_publicService_proto_rawDescData = file_publicService_proto_rawDesc
)

func file_publicService_proto_rawDescGZIP() []byte {
	file_publicService_proto_rawDescOnce.Do(func() {
		file_publicService_proto_rawDescData = protoimpl.X.CompressGZIP(file_publicService_proto_rawDescData)
	})
	return file_publicService_proto_rawDescData
}

var file_publicService_proto_msgTypes = make([]protoimpl.MessageInfo, 24)
var file_publicService_proto_goTypes = []interface{}{
	(*AssetPairRequest)(nil),           // 0: hft.AssetPairRequest
	(*AssetRequest)(nil),               // 1: hft.AssetRequest
	(*OrderbookRequest)(nil),           // 2: hft.OrderbookRequest
	(*TickersRequest)(nil),             // 3: hft.TickersRequest
	(*PricesRequest)(nil),              // 4: hft.PricesRequest
	(*PublicTradesRequest)(nil),        // 5: hft.PublicTradesRequest
	(*PriceUpdatesRequest)(nil),        // 6: hft.PriceUpdatesRequest
	(*OrderbookUpdatesRequest)(nil),    // 7: hft.OrderbookUpdatesRequest
	(*PublicTradesUpdatesRequest)(nil), // 8: hft.PublicTradesUpdatesRequest
	(*AssetPairResponse)(nil),          // 9: hft.AssetPairResponse
	(*AssetPairsResponse)(nil),         // 10: hft.AssetPairsResponse
	(*AssetResponse)(nil),              // 11: hft.AssetResponse
	(*AssetsResponse)(nil),             // 12: hft.AssetsResponse
	(*OrderbookResponse)(nil),          // 13: hft.OrderbookResponse
	(*TickersResponse)(nil),            // 14: hft.TickersResponse
	(*PricesResponse)(nil),             // 15: hft.PricesResponse
	(*AssetPair)(nil),                  // 16: hft.AssetPair
	(*Asset)(nil),                      // 17: hft.Asset
	(*Orderbook)(nil),                  // 18: hft.Orderbook
	(*PublicTradeUpdate)(nil),          // 19: hft.PublicTradeUpdate
	(*PublicTrade)(nil),                // 20: hft.PublicTrade
	(*PriceUpdate)(nil),                // 21: hft.PriceUpdate
	(*TickerUpdate)(nil),               // 22: hft.TickerUpdate
	(*Orderbook_PriceVolume)(nil),      // 23: hft.Orderbook.PriceVolume
	(*Error)(nil),                      // 24: hft.common.Error
	(*timestamppb.Timestamp)(nil),      // 25: google.protobuf.Timestamp
	(*emptypb.Empty)(nil),              // 26: google.protobuf.Empty
}
var file_publicService_proto_depIdxs = []int32{
	16, // 0: hft.AssetPairResponse.payload:type_name -> hft.AssetPair
	24, // 1: hft.AssetPairResponse.error:type_name -> hft.common.Error
	16, // 2: hft.AssetPairsResponse.payload:type_name -> hft.AssetPair
	24, // 3: hft.AssetPairsResponse.error:type_name -> hft.common.Error
	17, // 4: hft.AssetResponse.payload:type_name -> hft.Asset
	24, // 5: hft.AssetResponse.error:type_name -> hft.common.Error
	17, // 6: hft.AssetsResponse.payload:type_name -> hft.Asset
	24, // 7: hft.AssetsResponse.error:type_name -> hft.common.Error
	18, // 8: hft.OrderbookResponse.payload:type_name -> hft.Orderbook
	24, // 9: hft.OrderbookResponse.error:type_name -> hft.common.Error
	22, // 10: hft.TickersResponse.payload:type_name -> hft.TickerUpdate
	24, // 11: hft.TickersResponse.error:type_name -> hft.common.Error
	21, // 12: hft.PricesResponse.payload:type_name -> hft.PriceUpdate
	24, // 13: hft.PricesResponse.error:type_name -> hft.common.Error
	25, // 14: hft.Orderbook.timestamp:type_name -> google.protobuf.Timestamp
	23, // 15: hft.Orderbook.bids:type_name -> hft.Orderbook.PriceVolume
	23, // 16: hft.Orderbook.asks:type_name -> hft.Orderbook.PriceVolume
	20, // 17: hft.PublicTradeUpdate.trades:type_name -> hft.PublicTrade
	25, // 18: hft.PublicTrade.dateTime:type_name -> google.protobuf.Timestamp
	25, // 19: hft.PriceUpdate.timestamp:type_name -> google.protobuf.Timestamp
	25, // 20: hft.TickerUpdate.timestamp:type_name -> google.protobuf.Timestamp
	26, // 21: hft.PublicService.GetAssetPairs:input_type -> google.protobuf.Empty
	0,  // 22: hft.PublicService.GetAssetPair:input_type -> hft.AssetPairRequest
	26, // 23: hft.PublicService.GetAssets:input_type -> google.protobuf.Empty
	1,  // 24: hft.PublicService.GetAsset:input_type -> hft.AssetRequest
	2,  // 25: hft.PublicService.GetOrderbooks:input_type -> hft.OrderbookRequest
	3,  // 26: hft.PublicService.GetTickers:input_type -> hft.TickersRequest
	4,  // 27: hft.PublicService.GetPrices:input_type -> hft.PricesRequest
	5,  // 28: hft.PublicService.GetPublicTrades:input_type -> hft.PublicTradesRequest
	6,  // 29: hft.PublicService.GetPriceUpdates:input_type -> hft.PriceUpdatesRequest
	26, // 30: hft.PublicService.GetTickerUpdates:input_type -> google.protobuf.Empty
	7,  // 31: hft.PublicService.GetOrderbookUpdates:input_type -> hft.OrderbookUpdatesRequest
	8,  // 32: hft.PublicService.GetPublicTradeUpdates:input_type -> hft.PublicTradesUpdatesRequest
	10, // 33: hft.PublicService.GetAssetPairs:output_type -> hft.AssetPairsResponse
	9,  // 34: hft.PublicService.GetAssetPair:output_type -> hft.AssetPairResponse
	12, // 35: hft.PublicService.GetAssets:output_type -> hft.AssetsResponse
	11, // 36: hft.PublicService.GetAsset:output_type -> hft.AssetResponse
	13, // 37: hft.PublicService.GetOrderbooks:output_type -> hft.OrderbookResponse
	14, // 38: hft.PublicService.GetTickers:output_type -> hft.TickersResponse
	15, // 39: hft.PublicService.GetPrices:output_type -> hft.PricesResponse
	19, // 40: hft.PublicService.GetPublicTrades:output_type -> hft.PublicTradeUpdate
	21, // 41: hft.PublicService.GetPriceUpdates:output_type -> hft.PriceUpdate
	22, // 42: hft.PublicService.GetTickerUpdates:output_type -> hft.TickerUpdate
	18, // 43: hft.PublicService.GetOrderbookUpdates:output_type -> hft.Orderbook
	19, // 44: hft.PublicService.GetPublicTradeUpdates:output_type -> hft.PublicTradeUpdate
	33, // [33:45] is the sub-list for method output_type
	21, // [21:33] is the sub-list for method input_type
	21, // [21:21] is the sub-list for extension type_name
	21, // [21:21] is the sub-list for extension extendee
	0,  // [0:21] is the sub-list for field type_name
}

func init() { file_publicService_proto_init() }
func file_publicService_proto_init() {
	if File_publicService_proto != nil {
		return
	}
	file_common_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_publicService_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AssetPairRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_publicService_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AssetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_publicService_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderbookRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_publicService_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TickersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_publicService_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PricesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_publicService_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PublicTradesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_publicService_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PriceUpdatesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_publicService_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderbookUpdatesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_publicService_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PublicTradesUpdatesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_publicService_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AssetPairResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_publicService_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AssetPairsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_publicService_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AssetResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_publicService_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AssetsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_publicService_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderbookResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_publicService_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TickersResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_publicService_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PricesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_publicService_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AssetPair); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_publicService_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Asset); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_publicService_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Orderbook); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_publicService_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PublicTradeUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_publicService_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PublicTrade); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_publicService_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PriceUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_publicService_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TickerUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_publicService_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Orderbook_PriceVolume); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_publicService_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   24,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_publicService_proto_goTypes,
		DependencyIndexes: file_publicService_proto_depIdxs,
		MessageInfos:      file_publicService_proto_msgTypes,
	}.Build()
	File_publicService_proto = out.File
	file_publicService_proto_rawDesc = nil
	file_publicService_proto_goTypes = nil
	file_publicService_proto_depIdxs = nil
}
